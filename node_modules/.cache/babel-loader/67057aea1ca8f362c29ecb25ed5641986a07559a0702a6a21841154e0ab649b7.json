{"ast":null,"code":"import { mapPropsVariants } from \"./chunk-DRE2DOBH.mjs\";\n\n// src/extend-variants.js\nimport * as React from \"react\";\nimport { tv } from \"@nextui-org/theme\";\nimport clsx from \"clsx\";\nfunction getSlots(variants) {\n  return variants ? Object.values(variants).flatMap(Object.values).reduce((acc, slot) => {\n    if (typeof slot === \"object\" && slot !== null && !(slot instanceof String)) {\n      Object.keys(slot).forEach(key => {\n        if (!acc.hasOwnProperty(key)) {\n          acc[key] = \"\";\n        }\n      });\n    }\n    return acc;\n  }, {}) : {};\n}\nfunction getClassNamesWithProps({\n  props = {},\n  variants,\n  slots,\n  defaultVariants,\n  compoundVariants,\n  hasSlots,\n  opts\n}) {\n  var _a, _b, _c;\n  const keys = [];\n  if (defaultVariants && typeof defaultVariants === \"object\") {\n    for (const key in defaultVariants) {\n      const value = defaultVariants[key];\n      const propValue = props == null ? void 0 : props[key];\n      if (propValue && propValue !== value) {\n        keys.push(key);\n      }\n    }\n  }\n  const customTv = tv({\n    variants,\n    defaultVariants: defaultVariants && typeof defaultVariants === \"object\" ? Object.keys(defaultVariants).filter(k => !keys.includes(k)).reduce((o, k) => {\n      o[k] = defaultVariants[k];\n      return o;\n    }, []) : defaultVariants,\n    compoundVariants,\n    ...(hasSlots && {\n      slots\n    })\n  }, {\n    twMerge: (_a = opts.twMerge) != null ? _a : true,\n    twMergeConfig: (_b = opts.twMergeConfig) != null ? _b : {}\n  });\n  const [baseProps, variantProps] = mapPropsVariants(props, customTv.variantKeys, false);\n  const newProps = {\n    ...defaultVariants,\n    ...baseProps\n  };\n  let classNames = {};\n  const result = customTv(variantProps);\n  if (!hasSlots) {\n    newProps.className = clsx(result, props.className);\n  } else {\n    Object.entries(result).forEach(([key, value]) => {\n      const slotResult = value();\n      if (typeof slotResult === \"string\") {\n        classNames[key] = slotResult;\n      }\n    });\n    Object.entries((_c = props.classNames) != null ? _c : {}).forEach(([key, value]) => {\n      classNames[key] = clsx(classNames[key], value);\n    });\n  }\n  if (Object.keys(classNames).length !== 0) {\n    newProps.classNames = classNames;\n  }\n  return newProps;\n}\nfunction extendVariants(BaseComponent, styles = {}, opts = {}) {\n  const {\n    variants,\n    defaultVariants,\n    compoundVariants\n  } = styles || {};\n  const slots = getSlots(variants);\n  const hasSlots = typeof slots === \"object\" && Object.keys(slots).length !== 0;\n  const ForwardedComponent = React.forwardRef((originalProps = {}, ref) => {\n    const newProps = React.useMemo(() => getClassNamesWithProps({\n      slots,\n      variants,\n      compoundVariants,\n      props: originalProps,\n      defaultVariants,\n      hasSlots,\n      opts\n    }, [originalProps]));\n    return React.createElement(BaseComponent, {\n      ...originalProps,\n      ...newProps,\n      ref\n    });\n  });\n  if (BaseComponent.getCollectionNode) {\n    ForwardedComponent.getCollectionNode = itemProps => {\n      const newProps = getClassNamesWithProps({\n        slots,\n        variants,\n        compoundVariants,\n        props: itemProps,\n        defaultVariants,\n        hasSlots,\n        opts\n      });\n      return BaseComponent.getCollectionNode({\n        ...itemProps,\n        ...newProps\n      });\n    };\n  }\n  ForwardedComponent.displayName = `Extended(${BaseComponent.displayName || BaseComponent.name})`;\n  return ForwardedComponent;\n}\nexport { extendVariants };","map":{"version":3,"names":["mapPropsVariants","React","tv","clsx","getSlots","variants","Object","values","flatMap","reduce","acc","slot","String","keys","forEach","key","hasOwnProperty","getClassNamesWithProps","props","slots","defaultVariants","compoundVariants","hasSlots","opts","_a","_b","_c","value","propValue","push","customTv","filter","k","includes","o","twMerge","twMergeConfig","baseProps","variantProps","variantKeys","newProps","classNames","result","className","entries","slotResult","length","extendVariants","BaseComponent","styles","ForwardedComponent","forwardRef","originalProps","ref","useMemo","createElement","getCollectionNode","itemProps","displayName","name"],"sources":["/Users/vedxpatel/cra-template-ved-jp-starter/node_modules/@nextui-org/system-rsc/dist/chunk-BUFOXQZZ.mjs"],"sourcesContent":["import {\n  mapPropsVariants\n} from \"./chunk-DRE2DOBH.mjs\";\n\n// src/extend-variants.js\nimport * as React from \"react\";\nimport { tv } from \"@nextui-org/theme\";\nimport clsx from \"clsx\";\nfunction getSlots(variants) {\n  return variants ? Object.values(variants).flatMap(Object.values).reduce((acc, slot) => {\n    if (typeof slot === \"object\" && slot !== null && !(slot instanceof String)) {\n      Object.keys(slot).forEach((key) => {\n        if (!acc.hasOwnProperty(key)) {\n          acc[key] = \"\";\n        }\n      });\n    }\n    return acc;\n  }, {}) : {};\n}\nfunction getClassNamesWithProps({\n  props = {},\n  variants,\n  slots,\n  defaultVariants,\n  compoundVariants,\n  hasSlots,\n  opts\n}) {\n  var _a, _b, _c;\n  const keys = [];\n  if (defaultVariants && typeof defaultVariants === \"object\") {\n    for (const key in defaultVariants) {\n      const value = defaultVariants[key];\n      const propValue = props == null ? void 0 : props[key];\n      if (propValue && propValue !== value) {\n        keys.push(key);\n      }\n    }\n  }\n  const customTv = tv(\n    {\n      variants,\n      defaultVariants: defaultVariants && typeof defaultVariants === \"object\" ? Object.keys(defaultVariants).filter((k) => !keys.includes(k)).reduce((o, k) => {\n        o[k] = defaultVariants[k];\n        return o;\n      }, []) : defaultVariants,\n      compoundVariants,\n      ...hasSlots && { slots }\n    },\n    {\n      twMerge: (_a = opts.twMerge) != null ? _a : true,\n      twMergeConfig: (_b = opts.twMergeConfig) != null ? _b : {}\n    }\n  );\n  const [baseProps, variantProps] = mapPropsVariants(props, customTv.variantKeys, false);\n  const newProps = { ...defaultVariants, ...baseProps };\n  let classNames = {};\n  const result = customTv(variantProps);\n  if (!hasSlots) {\n    newProps.className = clsx(result, props.className);\n  } else {\n    Object.entries(result).forEach(([key, value]) => {\n      const slotResult = value();\n      if (typeof slotResult === \"string\") {\n        classNames[key] = slotResult;\n      }\n    });\n    Object.entries((_c = props.classNames) != null ? _c : {}).forEach(([key, value]) => {\n      classNames[key] = clsx(classNames[key], value);\n    });\n  }\n  if (Object.keys(classNames).length !== 0) {\n    newProps.classNames = classNames;\n  }\n  return newProps;\n}\nfunction extendVariants(BaseComponent, styles = {}, opts = {}) {\n  const { variants, defaultVariants, compoundVariants } = styles || {};\n  const slots = getSlots(variants);\n  const hasSlots = typeof slots === \"object\" && Object.keys(slots).length !== 0;\n  const ForwardedComponent = React.forwardRef((originalProps = {}, ref) => {\n    const newProps = React.useMemo(\n      () => getClassNamesWithProps(\n        {\n          slots,\n          variants,\n          compoundVariants,\n          props: originalProps,\n          defaultVariants,\n          hasSlots,\n          opts\n        },\n        [originalProps]\n      )\n    );\n    return React.createElement(BaseComponent, { ...originalProps, ...newProps, ref });\n  });\n  if (BaseComponent.getCollectionNode) {\n    ForwardedComponent.getCollectionNode = (itemProps) => {\n      const newProps = getClassNamesWithProps({\n        slots,\n        variants,\n        compoundVariants,\n        props: itemProps,\n        defaultVariants,\n        hasSlots,\n        opts\n      });\n      return BaseComponent.getCollectionNode({ ...itemProps, ...newProps });\n    };\n  }\n  ForwardedComponent.displayName = `Extended(${BaseComponent.displayName || BaseComponent.name})`;\n  return ForwardedComponent;\n}\n\nexport {\n  extendVariants\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}