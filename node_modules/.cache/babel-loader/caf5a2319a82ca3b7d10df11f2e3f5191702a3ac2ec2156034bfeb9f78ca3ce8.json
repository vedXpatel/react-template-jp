{"ast":null,"code":"// src/index.ts\nimport { filterDOMProps, mergeProps, useRouter, shouldClientNavigate, useLinkProps } from \"@react-aria/utils\";\nimport { useFocusable } from \"@react-aria/focus\";\nimport { usePress } from \"@react-aria/interactions\";\nfunction useAriaLink(props, ref) {\n  let {\n    elementType = \"a\",\n    onPress,\n    onPressStart,\n    onPressEnd,\n    onClick: deprecatedOnClick,\n    isDisabled,\n    ...otherProps\n  } = props;\n  let linkProps = {};\n  if (elementType !== \"a\") {\n    linkProps = {\n      role: \"link\",\n      tabIndex: !isDisabled ? 0 : void 0\n    };\n  }\n  let {\n    focusableProps\n  } = useFocusable(props, ref);\n  let {\n    pressProps,\n    isPressed\n  } = usePress({\n    onPress,\n    onPressStart,\n    onPressEnd,\n    isDisabled,\n    ref\n  });\n  let domProps = filterDOMProps(otherProps, {\n    labelable: true,\n    isLink: elementType === \"a\"\n  });\n  let interactionHandlers = mergeProps(focusableProps, pressProps);\n  let router = useRouter();\n  let routerLinkProps = useLinkProps(props);\n  return {\n    isPressed,\n    linkProps: mergeProps(domProps, routerLinkProps, {\n      ...interactionHandlers,\n      ...linkProps,\n      \"aria-disabled\": isDisabled || void 0,\n      \"aria-current\": props[\"aria-current\"],\n      onClick: e => {\n        var _a;\n        (_a = pressProps.onClick) == null ? void 0 : _a.call(pressProps, e);\n        if (deprecatedOnClick) {\n          deprecatedOnClick(e);\n        }\n        if (!router.isNative && e.currentTarget instanceof HTMLAnchorElement && e.currentTarget.href && !e.isDefaultPrevented() && shouldClientNavigate(e.currentTarget, e) && props.href) {\n          e.preventDefault();\n          router.open(e.currentTarget, e, props.href, props.routerOptions);\n        }\n      }\n    })\n  };\n}\nexport { useAriaLink };","map":{"version":3,"names":["filterDOMProps","mergeProps","useRouter","shouldClientNavigate","useLinkProps","useFocusable","usePress","useAriaLink","props","ref","elementType","onPress","onPressStart","onPressEnd","onClick","deprecatedOnClick","isDisabled","otherProps","linkProps","role","tabIndex","focusableProps","pressProps","isPressed","domProps","labelable","isLink","interactionHandlers","router","routerLinkProps","e","_a","call","isNative","currentTarget","HTMLAnchorElement","href","isDefaultPrevented","preventDefault","open","routerOptions"],"sources":["/Users/vedxpatel/cra-template-ved-jp-starter/node_modules/@nextui-org/use-aria-link/dist/index.mjs"],"sourcesContent":["// src/index.ts\nimport {\n  filterDOMProps,\n  mergeProps,\n  useRouter,\n  shouldClientNavigate,\n  useLinkProps\n} from \"@react-aria/utils\";\nimport { useFocusable } from \"@react-aria/focus\";\nimport { usePress } from \"@react-aria/interactions\";\nfunction useAriaLink(props, ref) {\n  let {\n    elementType = \"a\",\n    onPress,\n    onPressStart,\n    onPressEnd,\n    onClick: deprecatedOnClick,\n    isDisabled,\n    ...otherProps\n  } = props;\n  let linkProps = {};\n  if (elementType !== \"a\") {\n    linkProps = {\n      role: \"link\",\n      tabIndex: !isDisabled ? 0 : void 0\n    };\n  }\n  let { focusableProps } = useFocusable(props, ref);\n  let { pressProps, isPressed } = usePress({ onPress, onPressStart, onPressEnd, isDisabled, ref });\n  let domProps = filterDOMProps(otherProps, { labelable: true, isLink: elementType === \"a\" });\n  let interactionHandlers = mergeProps(focusableProps, pressProps);\n  let router = useRouter();\n  let routerLinkProps = useLinkProps(props);\n  return {\n    isPressed,\n    linkProps: mergeProps(domProps, routerLinkProps, {\n      ...interactionHandlers,\n      ...linkProps,\n      \"aria-disabled\": isDisabled || void 0,\n      \"aria-current\": props[\"aria-current\"],\n      onClick: (e) => {\n        var _a;\n        (_a = pressProps.onClick) == null ? void 0 : _a.call(pressProps, e);\n        if (deprecatedOnClick) {\n          deprecatedOnClick(e);\n        }\n        if (!router.isNative && e.currentTarget instanceof HTMLAnchorElement && e.currentTarget.href && !e.isDefaultPrevented() && shouldClientNavigate(e.currentTarget, e) && props.href) {\n          e.preventDefault();\n          router.open(e.currentTarget, e, props.href, props.routerOptions);\n        }\n      }\n    })\n  };\n}\nexport {\n  useAriaLink\n};\n"],"mappings":"AAAA;AACA,SACEA,cAAc,EACdC,UAAU,EACVC,SAAS,EACTC,oBAAoB,EACpBC,YAAY,QACP,mBAAmB;AAC1B,SAASC,YAAY,QAAQ,mBAAmB;AAChD,SAASC,QAAQ,QAAQ,0BAA0B;AACnD,SAASC,WAAWA,CAACC,KAAK,EAAEC,GAAG,EAAE;EAC/B,IAAI;IACFC,WAAW,GAAG,GAAG;IACjBC,OAAO;IACPC,YAAY;IACZC,UAAU;IACVC,OAAO,EAAEC,iBAAiB;IAC1BC,UAAU;IACV,GAAGC;EACL,CAAC,GAAGT,KAAK;EACT,IAAIU,SAAS,GAAG,CAAC,CAAC;EAClB,IAAIR,WAAW,KAAK,GAAG,EAAE;IACvBQ,SAAS,GAAG;MACVC,IAAI,EAAE,MAAM;MACZC,QAAQ,EAAE,CAACJ,UAAU,GAAG,CAAC,GAAG,KAAK;IACnC,CAAC;EACH;EACA,IAAI;IAAEK;EAAe,CAAC,GAAGhB,YAAY,CAACG,KAAK,EAAEC,GAAG,CAAC;EACjD,IAAI;IAAEa,UAAU;IAAEC;EAAU,CAAC,GAAGjB,QAAQ,CAAC;IAAEK,OAAO;IAAEC,YAAY;IAAEC,UAAU;IAAEG,UAAU;IAAEP;EAAI,CAAC,CAAC;EAChG,IAAIe,QAAQ,GAAGxB,cAAc,CAACiB,UAAU,EAAE;IAAEQ,SAAS,EAAE,IAAI;IAAEC,MAAM,EAAEhB,WAAW,KAAK;EAAI,CAAC,CAAC;EAC3F,IAAIiB,mBAAmB,GAAG1B,UAAU,CAACoB,cAAc,EAAEC,UAAU,CAAC;EAChE,IAAIM,MAAM,GAAG1B,SAAS,CAAC,CAAC;EACxB,IAAI2B,eAAe,GAAGzB,YAAY,CAACI,KAAK,CAAC;EACzC,OAAO;IACLe,SAAS;IACTL,SAAS,EAAEjB,UAAU,CAACuB,QAAQ,EAAEK,eAAe,EAAE;MAC/C,GAAGF,mBAAmB;MACtB,GAAGT,SAAS;MACZ,eAAe,EAAEF,UAAU,IAAI,KAAK,CAAC;MACrC,cAAc,EAAER,KAAK,CAAC,cAAc,CAAC;MACrCM,OAAO,EAAGgB,CAAC,IAAK;QACd,IAAIC,EAAE;QACN,CAACA,EAAE,GAAGT,UAAU,CAACR,OAAO,KAAK,IAAI,GAAG,KAAK,CAAC,GAAGiB,EAAE,CAACC,IAAI,CAACV,UAAU,EAAEQ,CAAC,CAAC;QACnE,IAAIf,iBAAiB,EAAE;UACrBA,iBAAiB,CAACe,CAAC,CAAC;QACtB;QACA,IAAI,CAACF,MAAM,CAACK,QAAQ,IAAIH,CAAC,CAACI,aAAa,YAAYC,iBAAiB,IAAIL,CAAC,CAACI,aAAa,CAACE,IAAI,IAAI,CAACN,CAAC,CAACO,kBAAkB,CAAC,CAAC,IAAIlC,oBAAoB,CAAC2B,CAAC,CAACI,aAAa,EAAEJ,CAAC,CAAC,IAAItB,KAAK,CAAC4B,IAAI,EAAE;UACjLN,CAAC,CAACQ,cAAc,CAAC,CAAC;UAClBV,MAAM,CAACW,IAAI,CAACT,CAAC,CAACI,aAAa,EAAEJ,CAAC,EAAEtB,KAAK,CAAC4B,IAAI,EAAE5B,KAAK,CAACgC,aAAa,CAAC;QAClE;MACF;IACF,CAAC;EACH,CAAC;AACH;AACA,SACEjC,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}