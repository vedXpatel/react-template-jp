{"ast":null,"code":"import { ListCollection as $a02d57049d202695$export$d085fb9e920b5ca7 } from \"./ListCollection.mjs\";\nimport { useMultipleSelectionState as $d5vlZ$useMultipleSelectionState, SelectionManager as $d5vlZ$SelectionManager } from \"@react-stately/selection\";\nimport { useMemo as $d5vlZ$useMemo, useCallback as $d5vlZ$useCallback, useRef as $d5vlZ$useRef, useEffect as $d5vlZ$useEffect } from \"react\";\nimport { useCollection as $d5vlZ$useCollection } from \"@react-stately/collections\";\n\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nfunction $e72dd72e1c76a225$export$2f645645f7bca764(props) {\n  let {\n    filter: filter,\n    layoutDelegate: layoutDelegate\n  } = props;\n  let selectionState = (0, $d5vlZ$useMultipleSelectionState)(props);\n  let disabledKeys = (0, $d5vlZ$useMemo)(() => props.disabledKeys ? new Set(props.disabledKeys) : new Set(), [props.disabledKeys]);\n  let factory = (0, $d5vlZ$useCallback)(nodes => filter ? new (0, $a02d57049d202695$export$d085fb9e920b5ca7)(filter(nodes)) : new (0, $a02d57049d202695$export$d085fb9e920b5ca7)(nodes), [filter]);\n  let context = (0, $d5vlZ$useMemo)(() => ({\n    suppressTextValueWarning: props.suppressTextValueWarning\n  }), [props.suppressTextValueWarning]);\n  let collection = (0, $d5vlZ$useCollection)(props, factory, context);\n  let selectionManager = (0, $d5vlZ$useMemo)(() => new (0, $d5vlZ$SelectionManager)(collection, selectionState, {\n    layoutDelegate: layoutDelegate\n  }), [collection, selectionState, layoutDelegate]);\n  // Reset focused key if that item is deleted from the collection.\n  const cachedCollection = (0, $d5vlZ$useRef)(null);\n  (0, $d5vlZ$useEffect)(() => {\n    if (selectionState.focusedKey != null && !collection.getItem(selectionState.focusedKey) && cachedCollection.current) {\n      const startItem = cachedCollection.current.getItem(selectionState.focusedKey);\n      const cachedItemNodes = [...cachedCollection.current.getKeys()].map(key => {\n        const itemNode = cachedCollection.current.getItem(key);\n        return (itemNode === null || itemNode === void 0 ? void 0 : itemNode.type) === 'item' ? itemNode : null;\n      }).filter(node => node !== null);\n      const itemNodes = [...collection.getKeys()].map(key => {\n        const itemNode = collection.getItem(key);\n        return (itemNode === null || itemNode === void 0 ? void 0 : itemNode.type) === 'item' ? itemNode : null;\n      }).filter(node => node !== null);\n      var _cachedItemNodes_length, _itemNodes_length;\n      const diff = ((_cachedItemNodes_length = cachedItemNodes === null || cachedItemNodes === void 0 ? void 0 : cachedItemNodes.length) !== null && _cachedItemNodes_length !== void 0 ? _cachedItemNodes_length : 0) - ((_itemNodes_length = itemNodes === null || itemNodes === void 0 ? void 0 : itemNodes.length) !== null && _itemNodes_length !== void 0 ? _itemNodes_length : 0);\n      var _startItem_index, _startItem_index1, _itemNodes_length1;\n      let index = Math.min(diff > 1 ? Math.max(((_startItem_index = startItem === null || startItem === void 0 ? void 0 : startItem.index) !== null && _startItem_index !== void 0 ? _startItem_index : 0) - diff + 1, 0) : (_startItem_index1 = startItem === null || startItem === void 0 ? void 0 : startItem.index) !== null && _startItem_index1 !== void 0 ? _startItem_index1 : 0, ((_itemNodes_length1 = itemNodes === null || itemNodes === void 0 ? void 0 : itemNodes.length) !== null && _itemNodes_length1 !== void 0 ? _itemNodes_length1 : 0) - 1);\n      let newNode = null;\n      let isReverseSearching = false;\n      while (index >= 0) {\n        if (!selectionManager.isDisabled(itemNodes[index].key)) {\n          newNode = itemNodes[index];\n          break;\n        }\n        // Find next, not disabled item.\n        if (index < itemNodes.length - 1 && !isReverseSearching) index++;else {\n          isReverseSearching = true;\n          var _startItem_index2, _startItem_index3;\n          if (index > ((_startItem_index2 = startItem === null || startItem === void 0 ? void 0 : startItem.index) !== null && _startItem_index2 !== void 0 ? _startItem_index2 : 0)) index = (_startItem_index3 = startItem === null || startItem === void 0 ? void 0 : startItem.index) !== null && _startItem_index3 !== void 0 ? _startItem_index3 : 0;\n          index--;\n        }\n      }\n      selectionState.setFocusedKey(newNode ? newNode.key : null);\n    }\n    cachedCollection.current = collection;\n  }, [collection, selectionManager, selectionState, selectionState.focusedKey]);\n  return {\n    collection: collection,\n    disabledKeys: disabledKeys,\n    selectionManager: selectionManager\n  };\n}\nexport { $e72dd72e1c76a225$export$2f645645f7bca764 as useListState };","map":{"version":3,"names":["$e72dd72e1c76a225$export$2f645645f7bca764","props","filter","layoutDelegate","selectionState","$d5vlZ$useMultipleSelectionState","disabledKeys","$d5vlZ$useMemo","Set","factory","$d5vlZ$useCallback","nodes","$a02d57049d202695$export$d085fb9e920b5ca7","context","suppressTextValueWarning","collection","$d5vlZ$useCollection","selectionManager","$d5vlZ$SelectionManager","cachedCollection","$d5vlZ$useRef","$d5vlZ$useEffect","focusedKey","getItem","current","startItem","cachedItemNodes","getKeys","map","key","itemNode","type","node","itemNodes","_cachedItemNodes_length","_itemNodes_length","diff","length","_startItem_index","_startItem_index1","_itemNodes_length1","index","Math","min","max","newNode","isReverseSearching","isDisabled","_startItem_index2","_startItem_index3","setFocusedKey"],"sources":["/Users/vedxpatel/cra-template-ved-jp-starter/node_modules/@react-stately/list/dist/packages/@react-stately/list/src/useListState.ts"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {Collection, CollectionStateBase, Key, LayoutDelegate, Node} from '@react-types/shared';\nimport {ListCollection} from './ListCollection';\nimport {MultipleSelectionStateProps, SelectionManager, useMultipleSelectionState} from '@react-stately/selection';\nimport {useCallback, useEffect, useMemo, useRef} from 'react';\nimport {useCollection} from '@react-stately/collections';\n\nexport interface ListProps<T> extends CollectionStateBase<T>, MultipleSelectionStateProps {\n  /** Filter function to generate a filtered list of nodes. */\n  filter?: (nodes: Iterable<Node<T>>) => Iterable<Node<T>>,\n  /** @private */\n  suppressTextValueWarning?: boolean,\n  /**\n   * A delegate object that provides layout information for items in the collection.\n   * This can be used to override the behavior of shift selection.\n   */\n  layoutDelegate?: LayoutDelegate\n}\n\nexport interface ListState<T> {\n  /** A collection of items in the list. */\n  collection: Collection<Node<T>>,\n\n  /** A set of items that are disabled. */\n  disabledKeys: Set<Key>,\n\n  /** A selection manager to read and update multiple selection state. */\n  selectionManager: SelectionManager\n}\n\n/**\n * Provides state management for list-like components. Handles building a collection\n * of items from props, and manages multiple selection state.\n */\nexport function useListState<T extends object>(props: ListProps<T>): ListState<T>  {\n  let {filter, layoutDelegate} = props;\n\n  let selectionState = useMultipleSelectionState(props);\n  let disabledKeys = useMemo(() =>\n    props.disabledKeys ? new Set(props.disabledKeys) : new Set<Key>()\n  , [props.disabledKeys]);\n\n  let factory = useCallback(nodes => filter ? new ListCollection(filter(nodes)) : new ListCollection(nodes as Iterable<Node<T>>), [filter]);\n  let context = useMemo(() => ({suppressTextValueWarning: props.suppressTextValueWarning}), [props.suppressTextValueWarning]);\n\n  let collection = useCollection(props, factory, context);\n\n  let selectionManager = useMemo(() =>\n    new SelectionManager(collection, selectionState, {layoutDelegate})\n    , [collection, selectionState, layoutDelegate]\n  );\n\n  // Reset focused key if that item is deleted from the collection.\n  const cachedCollection = useRef<Collection<Node<T>> | null>(null);\n  useEffect(() => {\n    if (selectionState.focusedKey != null && !collection.getItem(selectionState.focusedKey) && cachedCollection.current) {\n      const startItem = cachedCollection.current.getItem(selectionState.focusedKey);\n      const cachedItemNodes = [...cachedCollection.current.getKeys()].map(\n        key => {\n          const itemNode = cachedCollection.current!.getItem(key);\n          return itemNode?.type === 'item' ? itemNode : null;\n        }\n      ).filter(node => node !== null);\n      const itemNodes = [...collection.getKeys()].map(\n        key => {\n          const itemNode = collection.getItem(key);\n          return itemNode?.type === 'item' ? itemNode : null;\n        }\n      ).filter(node => node !== null);\n      const diff: number = (cachedItemNodes?.length ?? 0) - (itemNodes?.length ?? 0);\n      let index = Math.min(\n        (\n          diff > 1 ?\n          Math.max((startItem?.index ?? 0) - diff + 1, 0) :\n          startItem?.index ?? 0\n        ),\n        (itemNodes?.length ?? 0) - 1);\n      let newNode: Node<T> | null = null;\n      let isReverseSearching = false;\n      while (index >= 0) {\n        if (!selectionManager.isDisabled(itemNodes[index].key)) {\n          newNode = itemNodes[index];\n          break;\n        }\n        // Find next, not disabled item.\n        if (index < itemNodes.length - 1 && !isReverseSearching) {\n          index++;\n        // Otherwise, find previous, not disabled item.\n        } else {\n          isReverseSearching = true;\n          if (index > (startItem?.index ?? 0)) {\n            index = (startItem?.index ?? 0);\n          }\n          index--;\n        }\n      }\n      selectionState.setFocusedKey(newNode ? newNode.key : null);\n    }\n    cachedCollection.current = collection;\n  }, [collection, selectionManager, selectionState, selectionState.focusedKey]);\n\n  return {\n    collection,\n    disabledKeys,\n    selectionManager\n  };\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}