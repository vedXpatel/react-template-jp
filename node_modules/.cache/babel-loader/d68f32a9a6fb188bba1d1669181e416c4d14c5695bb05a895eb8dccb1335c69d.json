{"ast":null,"code":"import { useSafelyMouseToSubmenu as $d275435c250248f8$export$85ec83e04c95f50a } from \"./useSafelyMouseToSubmenu.mjs\";\nimport { useRef as $dXlYe$useRef, useCallback as $dXlYe$useCallback } from \"react\";\nimport { useId as $dXlYe$useId, useEffectEvent as $dXlYe$useEffectEvent, useLayoutEffect as $dXlYe$useLayoutEffect } from \"@react-aria/utils\";\nimport { useLocale as $dXlYe$useLocale } from \"@react-aria/i18n\";\n\n/*\n * Copyright 2023 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nfunction $0065b146e7192841$export$7138b0d059a6e743(props, state, ref) {\n  let {\n    parentMenuRef: parentMenuRef,\n    submenuRef: submenuRef,\n    type = 'menu',\n    isDisabled: isDisabled,\n    delay = 200\n  } = props;\n  let submenuTriggerId = (0, $dXlYe$useId)();\n  let overlayId = (0, $dXlYe$useId)();\n  let {\n    direction: direction\n  } = (0, $dXlYe$useLocale)();\n  let openTimeout = (0, $dXlYe$useRef)(undefined);\n  let cancelOpenTimeout = (0, $dXlYe$useCallback)(() => {\n    if (openTimeout.current) {\n      clearTimeout(openTimeout.current);\n      openTimeout.current = undefined;\n    }\n  }, [openTimeout]);\n  let onSubmenuOpen = (0, $dXlYe$useEffectEvent)(focusStrategy => {\n    cancelOpenTimeout();\n    state.open(focusStrategy);\n  });\n  let onSubmenuClose = (0, $dXlYe$useEffectEvent)(() => {\n    cancelOpenTimeout();\n    state.close();\n  });\n  (0, $dXlYe$useLayoutEffect)(() => {\n    return () => {\n      cancelOpenTimeout();\n    };\n  }, [cancelOpenTimeout]);\n  let submenuKeyDown = e => {\n    switch (e.key) {\n      case 'ArrowLeft':\n        if (direction === 'ltr' && e.currentTarget.contains(e.target)) {\n          e.stopPropagation();\n          onSubmenuClose();\n          ref.current.focus();\n        }\n        break;\n      case 'ArrowRight':\n        if (direction === 'rtl' && e.currentTarget.contains(e.target)) {\n          e.stopPropagation();\n          onSubmenuClose();\n          ref.current.focus();\n        }\n        break;\n      case 'Escape':\n        e.stopPropagation();\n        state.closeAll();\n        break;\n    }\n  };\n  let submenuProps = {\n    id: overlayId,\n    'aria-labelledby': submenuTriggerId,\n    submenuLevel: state.submenuLevel,\n    ...(type === 'menu' && {\n      onClose: state.closeAll,\n      autoFocus: state.focusStrategy,\n      onKeyDown: submenuKeyDown\n    })\n  };\n  let submenuTriggerKeyDown = e => {\n    switch (e.key) {\n      case 'ArrowRight':\n        if (!isDisabled) {\n          if (direction === 'ltr') {\n            if (!state.isOpen) onSubmenuOpen('first');\n            if (type === 'menu' && !!(submenuRef === null || submenuRef === void 0 ? void 0 : submenuRef.current) && document.activeElement === (ref === null || ref === void 0 ? void 0 : ref.current)) submenuRef.current.focus();\n          } else if (state.isOpen) onSubmenuClose();else e.continuePropagation();\n        }\n        break;\n      case 'ArrowLeft':\n        if (!isDisabled) {\n          if (direction === 'rtl') {\n            if (!state.isOpen) onSubmenuOpen('first');\n            if (type === 'menu' && !!(submenuRef === null || submenuRef === void 0 ? void 0 : submenuRef.current) && document.activeElement === (ref === null || ref === void 0 ? void 0 : ref.current)) submenuRef.current.focus();\n          } else if (state.isOpen) onSubmenuClose();else e.continuePropagation();\n        }\n        break;\n      case 'Escape':\n        state.closeAll();\n        break;\n      default:\n        e.continuePropagation();\n        break;\n    }\n  };\n  let onPressStart = e => {\n    if (!isDisabled && (e.pointerType === 'virtual' || e.pointerType === 'keyboard'))\n      // If opened with a screen reader or keyboard, auto focus the first submenu item.\n      onSubmenuOpen('first');\n  };\n  let onPress = e => {\n    if (!isDisabled && (e.pointerType === 'touch' || e.pointerType === 'mouse'))\n      // For touch or on a desktop device with a small screen open on press up to possible problems with\n      // press up happening on the newly opened tray items\n      onSubmenuOpen();\n  };\n  let onHoverChange = isHovered => {\n    if (!isDisabled) {\n      if (isHovered && !state.isOpen) {\n        if (!openTimeout.current) openTimeout.current = setTimeout(() => {\n          onSubmenuOpen();\n        }, delay);\n      } else if (!isHovered) cancelOpenTimeout();\n    }\n  };\n  let onBlur = e => {\n    if (state.isOpen && parentMenuRef.current.contains(e.relatedTarget)) onSubmenuClose();\n  };\n  let shouldCloseOnInteractOutside = target => {\n    if (target !== ref.current) return true;\n    return false;\n  };\n  (0, $d275435c250248f8$export$85ec83e04c95f50a)({\n    menuRef: parentMenuRef,\n    submenuRef: submenuRef,\n    isOpen: state.isOpen,\n    isDisabled: isDisabled\n  });\n  return {\n    submenuTriggerProps: {\n      id: submenuTriggerId,\n      'aria-controls': state.isOpen ? overlayId : undefined,\n      'aria-haspopup': !isDisabled ? type : undefined,\n      'aria-expanded': state.isOpen ? 'true' : 'false',\n      onPressStart: onPressStart,\n      onPress: onPress,\n      onHoverChange: onHoverChange,\n      onKeyDown: submenuTriggerKeyDown,\n      onBlur: onBlur,\n      isOpen: state.isOpen\n    },\n    submenuProps: submenuProps,\n    popoverProps: {\n      isNonModal: true,\n      disableFocusManagement: true,\n      shouldCloseOnInteractOutside: shouldCloseOnInteractOutside\n    }\n  };\n}\nexport { $0065b146e7192841$export$7138b0d059a6e743 as useSubmenuTrigger };","map":{"version":3,"names":["$0065b146e7192841$export$7138b0d059a6e743","props","state","ref","parentMenuRef","submenuRef","type","isDisabled","delay","submenuTriggerId","$dXlYe$useId","overlayId","direction","$dXlYe$useLocale","openTimeout","$dXlYe$useRef","undefined","cancelOpenTimeout","$dXlYe$useCallback","current","clearTimeout","onSubmenuOpen","$dXlYe$useEffectEvent","focusStrategy","open","onSubmenuClose","close","$dXlYe$useLayoutEffect","submenuKeyDown","e","key","currentTarget","contains","target","stopPropagation","focus","closeAll","submenuProps","id","submenuLevel","onClose","autoFocus","onKeyDown","submenuTriggerKeyDown","isOpen","document","activeElement","continuePropagation","onPressStart","pointerType","onPress","onHoverChange","isHovered","setTimeout","onBlur","relatedTarget","shouldCloseOnInteractOutside","$d275435c250248f8$export$85ec83e04c95f50a","menuRef","submenuTriggerProps","popoverProps","isNonModal","disableFocusManagement"],"sources":["/Users/vedxpatel/cra-template-ved-jp-starter/node_modules/@react-aria/combobox/node_modules/@react-aria/menu/dist/packages/@react-aria/menu/src/useSubmenuTrigger.ts"],"sourcesContent":["/*\n * Copyright 2023 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {AriaMenuItemProps} from './useMenuItem';\nimport {AriaMenuOptions} from './useMenu';\nimport type {AriaPopoverProps, OverlayProps} from '@react-aria/overlays';\nimport {FocusableElement, FocusStrategy, KeyboardEvent, Node, PressEvent, RefObject} from '@react-types/shared';\nimport type {SubmenuTriggerState} from '@react-stately/menu';\nimport {useCallback, useRef} from 'react';\nimport {useEffectEvent, useId, useLayoutEffect} from '@react-aria/utils';\nimport {useLocale} from '@react-aria/i18n';\nimport {useSafelyMouseToSubmenu} from './useSafelyMouseToSubmenu';\n\nexport interface AriaSubmenuTriggerProps {\n  /**\n   * An object representing the submenu trigger menu item. Contains all the relevant information that makes up the menu item.\n   * @deprecated\n   */\n  node?: Node<unknown>,\n  /** Whether the submenu trigger is disabled. */\n  isDisabled?: boolean,\n  /** The type of the contents that the submenu trigger opens. */\n  type?: 'dialog' | 'menu',\n  /** Ref of the menu that contains the submenu trigger. */\n  parentMenuRef: RefObject<HTMLElement | null>,\n  /** Ref of the submenu opened by the submenu trigger. */\n  submenuRef: RefObject<HTMLElement | null>,\n  /**\n   * The delay time in milliseconds for the submenu to appear after hovering over the trigger.\n   * @default 200\n   */\n  delay?: number\n}\n\ninterface SubmenuTriggerProps extends AriaMenuItemProps {\n  /** Whether the submenu trigger is in an expanded state. */\n  isOpen: boolean\n}\n\ninterface SubmenuProps<T> extends AriaMenuOptions<T> {\n  /** The level of the submenu. */\n  submenuLevel: number\n}\n\nexport interface SubmenuTriggerAria<T> {\n  /** Props for the submenu trigger menu item. */\n  submenuTriggerProps: SubmenuTriggerProps,\n  /** Props for the submenu controlled by the submenu trigger menu item. */\n  submenuProps: SubmenuProps<T>,\n  /** Props for the submenu's popover container. */\n  popoverProps: Pick<AriaPopoverProps, 'isNonModal' | 'shouldCloseOnInteractOutside'> & Pick<OverlayProps, 'disableFocusManagement'>\n}\n\n/**\n * Provides the behavior and accessibility implementation for a submenu trigger and its associated submenu.\n * @param props - Props for the submenu trigger and refs attach to its submenu and parent menu.\n * @param state - State for the submenu trigger.\n * @param ref - Ref to the submenu trigger element.\n */\nexport function useSubmenuTrigger<T>(props: AriaSubmenuTriggerProps, state: SubmenuTriggerState, ref: RefObject<FocusableElement | null>): SubmenuTriggerAria<T> {\n  let {parentMenuRef, submenuRef, type = 'menu', isDisabled, delay = 200} = props;\n  let submenuTriggerId = useId();\n  let overlayId = useId();\n  let {direction} = useLocale();\n  let openTimeout = useRef<ReturnType<typeof setTimeout> | undefined>(undefined);\n  let cancelOpenTimeout = useCallback(() => {\n    if (openTimeout.current) {\n      clearTimeout(openTimeout.current);\n      openTimeout.current = undefined;\n    }\n  }, [openTimeout]);\n\n  let onSubmenuOpen = useEffectEvent((focusStrategy?: FocusStrategy) => {\n    cancelOpenTimeout();\n    state.open(focusStrategy);\n  });\n\n  let onSubmenuClose = useEffectEvent(() => {\n    cancelOpenTimeout();\n    state.close();\n  });\n\n  useLayoutEffect(() => {\n    return () => {\n      cancelOpenTimeout();\n    };\n  }, [cancelOpenTimeout]);\n\n  let submenuKeyDown = (e: KeyboardEvent) => {\n    switch (e.key) {\n      case 'ArrowLeft':\n        if (direction === 'ltr' && e.currentTarget.contains(e.target as Element)) {\n          e.stopPropagation();\n          onSubmenuClose();\n          ref.current.focus();\n        }\n        break;\n      case 'ArrowRight':\n        if (direction === 'rtl' && e.currentTarget.contains(e.target as Element)) {\n          e.stopPropagation();\n          onSubmenuClose();\n          ref.current.focus();\n        }\n        break;\n      case 'Escape':\n        e.stopPropagation();\n        state.closeAll();\n        break;\n    }\n  };\n\n  let submenuProps = {\n    id: overlayId,\n    'aria-labelledby': submenuTriggerId,\n    submenuLevel: state.submenuLevel,\n    ...(type === 'menu' && {\n      onClose: state.closeAll,\n      autoFocus: state.focusStrategy,\n      onKeyDown: submenuKeyDown\n    })\n  };\n\n  let submenuTriggerKeyDown = (e: KeyboardEvent) => {\n    switch (e.key) {\n      case 'ArrowRight':\n        if (!isDisabled) {\n          if (direction === 'ltr') {\n            if (!state.isOpen) {\n              onSubmenuOpen('first');\n            }\n\n            if (type === 'menu' && !!submenuRef?.current && document.activeElement === ref?.current) {\n              submenuRef.current.focus();\n            }\n          } else if (state.isOpen) {\n            onSubmenuClose();\n          } else {\n            e.continuePropagation();\n          }\n        }\n\n        break;\n      case 'ArrowLeft':\n        if (!isDisabled) {\n          if (direction === 'rtl') {\n            if (!state.isOpen) {\n              onSubmenuOpen('first');\n            }\n\n            if (type === 'menu' && !!submenuRef?.current && document.activeElement === ref?.current) {\n              submenuRef.current.focus();\n            }\n          } else if (state.isOpen) {\n            onSubmenuClose();\n          } else {\n            e.continuePropagation();\n          }\n        }\n        break;\n      case 'Escape':\n        state.closeAll();\n        break;\n      default:\n        e.continuePropagation();\n        break;\n    }\n  };\n\n  let onPressStart = (e: PressEvent) => {\n    if (!isDisabled && (e.pointerType === 'virtual' || e.pointerType === 'keyboard')) {\n      // If opened with a screen reader or keyboard, auto focus the first submenu item.\n      onSubmenuOpen('first');\n    }\n  };\n\n  let onPress = (e: PressEvent) => {\n    if (!isDisabled && (e.pointerType === 'touch' || e.pointerType === 'mouse')) {\n      // For touch or on a desktop device with a small screen open on press up to possible problems with\n      // press up happening on the newly opened tray items\n      onSubmenuOpen();\n    }\n  };\n\n  let onHoverChange = (isHovered) => {\n    if (!isDisabled) {\n      if (isHovered && !state.isOpen) {\n        if (!openTimeout.current) {\n          openTimeout.current = setTimeout(() => {\n            onSubmenuOpen();\n          }, delay);\n        }\n      } else if (!isHovered) {\n        cancelOpenTimeout();\n      }\n    }\n  };\n\n  let onBlur = (e) => {\n    if (state.isOpen && parentMenuRef.current.contains(e.relatedTarget)) {\n      onSubmenuClose();\n    }\n  };\n\n  let shouldCloseOnInteractOutside = (target) => {\n    if (target !== ref.current) {\n      return true;\n    }\n\n    return false;\n  };\n\n  useSafelyMouseToSubmenu({menuRef: parentMenuRef, submenuRef, isOpen: state.isOpen, isDisabled: isDisabled});\n\n  return {\n    submenuTriggerProps: {\n      id: submenuTriggerId,\n      'aria-controls': state.isOpen ? overlayId : undefined,\n      'aria-haspopup': !isDisabled ? type : undefined,\n      'aria-expanded': state.isOpen ? 'true' : 'false',\n      onPressStart,\n      onPress,\n      onHoverChange,\n      onKeyDown: submenuTriggerKeyDown,\n      onBlur,\n      isOpen: state.isOpen\n    },\n    submenuProps,\n    popoverProps: {\n      isNonModal: true,\n      disableFocusManagement: true,\n      shouldCloseOnInteractOutside\n    }\n  };\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}