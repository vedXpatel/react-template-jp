{"version":3,"file":"DatePickerActions.js","sources":["../src/date-picker/DatePickerActions.tsx"],"sourcesContent":["import { Button, type ButtonProps, makePrefixer } from \"@salt-ds/core\";\nimport { clsx } from \"clsx\";\nimport React, {\n  type ComponentPropsWithoutRef,\n  forwardRef,\n  useEffect,\n  type SyntheticEvent,\n  type MouseEventHandler,\n  type Ref,\n} from \"react\";\nimport type { DateRangeSelection, SingleDateSelection } from \"../calendar\";\nimport {\n  type RangeDatePickerState,\n  type SingleDatePickerState,\n  useDatePickerContext,\n} from \"./index\";\nimport \"./DatePickerActions.css\";\nimport { useComponentCssInjection } from \"@salt-ds/styles\";\nimport { useWindow } from \"@salt-ds/window\";\nimport datePickerActions from \"./DatePickerActions.css\";\n\nconst withBaseName = makePrefixer(\"saltDatePickerActions\");\n\n/**\n * Base props for DatePicker actions.\n */\nexport interface DatePickerActionsBaseProps\n  extends ComponentPropsWithoutRef<\"div\"> {\n  /**\n   * Callback fired when the cancel action is triggered.\n   * @param _event - The synthetic event.\n   */\n  onCancel?: (_event: SyntheticEvent) => void;\n  /**\n   * Ref to apply button\n   */\n  applyButtonRef?: Ref<HTMLButtonElement>;\n  /**\n   * Props for the apply button.\n   */\n  ApplyButtonProps?: ButtonProps;\n  /**\n   * Props for the cancel button.\n   */\n  CancelButtonProps?: ButtonProps;\n  /**\n   * Ref to cancel button\n   */\n  cancelButtonRef?: Ref<HTMLButtonElement>;\n}\n\n/**\n * Props for the DatePicker actions component.\n * @template SelectionVariant - The selection variant, either \"single\" or \"range\".\n */\nexport type DatePickerActionsProps<\n  SelectionVariant extends \"single\" | \"range\",\n> = SelectionVariant extends \"single\"\n  ? DatePickerActionsBaseProps & {\n      /**\n       * The selection variant, set to \"single\".\n       */\n      selectionVariant: \"single\";\n      /**\n       * Callback fired when the apply action is triggered.\n       * @param _event - The synthetic event.\n       * @param date - The selected single date or null.\n       */\n      onApply?: (\n        _event: SyntheticEvent,\n        date: SingleDateSelection | null,\n      ) => void;\n    }\n  : DatePickerActionsBaseProps & {\n      /**\n       * The selection variant, set to \"range\".\n       */\n      selectionVariant: \"range\";\n      /**\n       * Callback fired when the apply action is triggered.\n       * @param _event - The synthetic event.\n       * @param date - The selected date range or null.\n       */\n      onApply?: (\n        _event: SyntheticEvent,\n        date: DateRangeSelection | null,\n      ) => void;\n    };\n\nexport const DatePickerActions = forwardRef<\n  HTMLDivElement,\n  DatePickerActionsProps<\"single\" | \"range\">\n>(function DatePickerActions(props, ref) {\n  const {\n    applyButtonRef,\n    ApplyButtonProps,\n    cancelButtonRef,\n    children,\n    className,\n    CancelButtonProps,\n    onApply,\n    onCancel,\n    selectionVariant,\n    ...rest\n  } = props;\n  const targetWindow = useWindow();\n  useComponentCssInjection({\n    testId: \"salt-date-picker-actions\",\n    css: datePickerActions,\n    window: targetWindow,\n  });\n\n  // biome-ignore lint/suspicious/noExplicitAny: state and helpers coerced based on selectionVariant\n  let stateAndHelpers: any;\n  if (selectionVariant === \"range\") {\n    stateAndHelpers = useDatePickerContext({\n      selectionVariant: \"range\",\n    }) as RangeDatePickerState;\n  } else {\n    stateAndHelpers = useDatePickerContext({\n      selectionVariant: \"single\",\n    }) as SingleDatePickerState;\n  }\n\n  const {\n    state: { selectedDate },\n    helpers: { cancel, apply, setEnableApply },\n  } = stateAndHelpers;\n\n  useEffect(() => {\n    setEnableApply(true);\n  }, [setEnableApply]);\n\n  const handleCancel: MouseEventHandler<HTMLButtonElement> = (event) => {\n    cancel();\n    CancelButtonProps?.onClick?.(event);\n    onCancel?.(event);\n  };\n\n  const handleApply: MouseEventHandler<HTMLButtonElement> = (event) => {\n    if (selectionVariant === \"single\") {\n      apply(selectedDate, false);\n      onApply?.(event, selectedDate);\n    } else {\n      apply(selectedDate, { startDate: false, endDate: false });\n      onApply?.(event, selectedDate);\n    }\n    ApplyButtonProps?.onClick?.(event);\n  };\n\n  return (\n    <div className={clsx(className, withBaseName())} ref={ref} {...rest}>\n      <div className={withBaseName(\"body\")}>{children}</div>\n      <Button\n        appearance=\"transparent\"\n        sentiment=\"neutral\"\n        ref={cancelButtonRef}\n        {...CancelButtonProps}\n        onClick={handleCancel}\n        className={clsx(withBaseName(\"action\"), CancelButtonProps?.className)}\n      >\n        Cancel\n      </Button>\n      <Button\n        appearance=\"solid\"\n        sentiment=\"accented\"\n        ref={applyButtonRef}\n        {...ApplyButtonProps}\n        onClick={handleApply}\n        className={clsx(withBaseName(\"action\"), ApplyButtonProps?.className)}\n      >\n        Apply\n      </Button>\n    </div>\n  );\n});\n"],"names":["DatePickerActions","datePickerActions"],"mappings":"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"}