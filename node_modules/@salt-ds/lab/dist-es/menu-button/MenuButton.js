import { jsx } from 'react/jsx-runtime';
import { useComponentCssInjection } from '@salt-ds/styles';
import { useWindow } from '@salt-ds/window';
import { forwardRef, useState, useCallback } from 'react';
import { CascadingMenu } from '../cascading-menu/CascadingMenu.js';
import { MenuButtonTrigger } from './MenuButtonTrigger.js';
import css_248z from './MenuButton.css.js';

const MenuButton = forwardRef(
  function MenuButton2({ variant = "secondary", CascadingMenuProps = {}, children, ...restProps }, ref) {
    const {
      initialSource = { menuItems: [] },
      onOpen,
      onClose,
      ...restMenuProps
    } = CascadingMenuProps;
    const targetWindow = useWindow();
    useComponentCssInjection({
      testId: "salt-menu-button",
      css: css_248z,
      window: targetWindow
    });
    const [isMenuOpen, setMenuOpen] = useState(false);
    const handleOpen = useCallback(() => {
      setMenuOpen(true);
      onOpen == null ? void 0 : onOpen();
    }, [onOpen]);
    const handleClose = useCallback(() => {
      setMenuOpen(false);
      onClose == null ? void 0 : onClose();
    }, [onClose]);
    return /* @__PURE__ */ jsx(CascadingMenu, {
      initialSource,
      onClose: handleClose,
      onOpen: handleOpen,
      ...restMenuProps,
      children: /* @__PURE__ */ jsx(MenuButtonTrigger, {
        "aria-expanded": isMenuOpen,
        "aria-haspopup": true,
        isMenuOpen,
        ref,
        variant,
        ...restProps,
        children
      })
    });
  }
);

export { MenuButton };
//# sourceMappingURL=MenuButton.js.map
