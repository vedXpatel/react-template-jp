import { debounce, useIsomorphicLayoutEffect, ownerWindow } from '@salt-ds/core';
import { useRef, useState, useCallback } from 'react';

function useOverflowDetection(dependencies = []) {
  const targetRef = useRef(null);
  const [isOverflowed, setOverflowed] = useState(false);
  const handleResize = useCallback(
    debounce(() => {
      const { current } = targetRef;
      if (!current) {
        isOverflowed && setOverflowed(false);
        return;
      }
      setOverflowed(current.offsetWidth < current.scrollWidth);
    }),
    [isOverflowed]
  );
  useIsomorphicLayoutEffect(() => {
    const win = ownerWindow(targetRef.current);
    win.addEventListener("resize", handleResize);
    return () => {
      handleResize.clear();
      win.removeEventListener("resize", handleResize);
    };
  }, [handleResize]);
  useIsomorphicLayoutEffect(handleResize, dependencies);
  return [targetRef, isOverflowed];
}

export { useOverflowDetection };
//# sourceMappingURL=useOverflowDetection.js.map
