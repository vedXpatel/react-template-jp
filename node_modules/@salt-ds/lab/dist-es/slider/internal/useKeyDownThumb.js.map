{"version":3,"file":"useKeyDownThumb.js","sources":["../src/slider/internal/useKeyDownThumb.ts"],"sourcesContent":["import type { SliderChangeHandler, SliderValue, ThumbIndex } from \"../types\";\nimport {\n  clampValue,\n  preventOverlappingValues,\n  roundToStep,\n  setValue,\n} from \"./utils\";\n\nconst supportedKeys = [\n  \"Home\",\n  \"End\",\n  \"ArrowUp\",\n  \"ArrowRight\",\n  \"ArrowDown\",\n  \"ArrowLeft\",\n];\n\nconst getValueFromKeyName = (\n  keyName: string,\n  value: number,\n  min: number,\n  max: number,\n  step: number,\n) => {\n  switch (keyName) {\n    case \"Home\":\n      return min;\n    case \"End\":\n      return max;\n    case \"ArrowUp\":\n    case \"ArrowRight\":\n      return value + step;\n    case \"ArrowDown\":\n    case \"ArrowLeft\":\n      return value - step;\n    default:\n      return value;\n  }\n};\n\nexport const useKeyDownThumb = (\n  min: number,\n  max: number,\n  step: number,\n  value: SliderValue,\n  onChange: SliderChangeHandler,\n  index: ThumbIndex,\n) => {\n  return (event: React.KeyboardEvent) => {\n    if (!supportedKeys.includes(event.key)) return;\n    event.preventDefault();\n    const targetValue = value[index];\n    const rawValue = getValueFromKeyName(\n      event.key,\n      targetValue as number,\n      min,\n      max,\n      step,\n    );\n\n    const roundedToStep = roundToStep(rawValue, step);\n    const rounded = Number(roundedToStep.toFixed(1));\n    const clamped = clampValue(rounded, [min, max]);\n    const newValue = preventOverlappingValues(value, clamped, index);\n\n    setValue(value, newValue, index, onChange);\n  };\n};\n"],"names":[],"mappings":";;AAQA,MAAM,aAAgB,GAAA;AAAA,EACpB,MAAA;AAAA,EACA,KAAA;AAAA,EACA,SAAA;AAAA,EACA,YAAA;AAAA,EACA,WAAA;AAAA,EACA,WAAA;AACF,CAAA,CAAA;AAEA,MAAM,sBAAsB,CAC1B,OAAA,EACA,KACA,EAAA,GAAA,EACA,KACA,IACG,KAAA;AACH,EAAQ,QAAA,OAAA;AAAA,IACD,KAAA,MAAA;AACH,MAAO,OAAA,GAAA,CAAA;AAAA,IACJ,KAAA,KAAA;AACH,MAAO,OAAA,GAAA,CAAA;AAAA,IACJ,KAAA,SAAA,CAAA;AAAA,IACA,KAAA,YAAA;AACH,MAAA,OAAO,KAAQ,GAAA,IAAA,CAAA;AAAA,IACZ,KAAA,WAAA,CAAA;AAAA,IACA,KAAA,WAAA;AACH,MAAA,OAAO,KAAQ,GAAA,IAAA,CAAA;AAAA,IAAA;AAEf,MAAO,OAAA,KAAA,CAAA;AAAA,GAAA;AAEb,CAAA,CAAA;AAEO,MAAM,kBAAkB,CAC7B,GAAA,EACA,KACA,IACA,EAAA,KAAA,EACA,UACA,KACG,KAAA;AACH,EAAA,OAAO,CAAC,KAA+B,KAAA;AACrC,IAAA,IAAI,CAAC,aAAA,CAAc,QAAS,CAAA,KAAA,CAAM,GAAG,CAAA;AAAG,MAAA,OAAA;AACxC,IAAA,KAAA,CAAM,cAAe,EAAA,CAAA;AACrB,IAAA,MAAM,cAAc,KAAM,CAAA,KAAA,CAAA,CAAA;AAC1B,IAAA,MAAM,QAAW,GAAA,mBAAA;AAAA,MACf,KAAM,CAAA,GAAA;AAAA,MACN,WAAA;AAAA,MACA,GAAA;AAAA,MACA,GAAA;AAAA,MACA,IAAA;AAAA,KACF,CAAA;AAEA,IAAM,MAAA,aAAA,GAAgB,WAAY,CAAA,QAAA,EAAU,IAAI,CAAA,CAAA;AAChD,IAAA,MAAM,OAAU,GAAA,MAAA,CAAO,aAAc,CAAA,OAAA,CAAQ,CAAC,CAAC,CAAA,CAAA;AAC/C,IAAA,MAAM,UAAU,UAAW,CAAA,OAAA,EAAS,CAAC,GAAA,EAAK,GAAG,CAAC,CAAA,CAAA;AAC9C,IAAA,MAAM,QAAW,GAAA,wBAAA,CAAyB,KAAO,EAAA,OAAA,EAAS,KAAK,CAAA,CAAA;AAE/D,IAAS,QAAA,CAAA,KAAA,EAAO,QAAU,EAAA,KAAA,EAAO,QAAQ,CAAA,CAAA;AAAA,GAC3C,CAAA;AACF;;;;"}