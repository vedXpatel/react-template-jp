import { jsx } from 'react/jsx-runtime';
import { useIcon, useForkRef, Button } from '@salt-ds/core';
import { forwardRef } from 'react';
import { useOverflowMenu, useOverflowContext } from '@fluentui/react-overflow';
import '../dropdown/DropdownBase.js';
import '../dropdown/DropdownButton.js';
import { Dropdown } from '../dropdown/Dropdown.js';
import '../form-field-context-legacy/FormFieldLegacyContext.js';
import '../responsive/useResizeObserver.js';

const OverflowMenu = forwardRef(
  function OverflowMenu2(props, forwardedRef) {
    const { tabs, ...rest } = props;
    const { ref, overflowCount, isOverflowing } = useOverflowMenu();
    const { OverflowIcon } = useIcon();
    const handleRef = useForkRef(ref, forwardedRef);
    const itemVisibility = useOverflowContext(
      (context) => context.itemVisibility
    );
    const tabList = tabs.filter(({ value }) => !itemVisibility[value]);
    if (!isOverflowing)
      return null;
    return /* @__PURE__ */ jsx(Dropdown, {
      "aria-label": `${overflowCount} more tabs`,
      triggerComponent: /* @__PURE__ */ jsx(Button, {
        "aria-label": "More tabs",
        variant: "secondary",
        role: "combobox",
        children: /* @__PURE__ */ jsx(OverflowIcon, {
          "aria-hidden": true,
          style: { margin: 0 }
        })
      }),
      width: "auto",
      ref: handleRef,
      source: tabList,
      selected: null,
      ...rest
    });
  }
);

export { OverflowMenu };
//# sourceMappingURL=OverflowMenu.js.map
