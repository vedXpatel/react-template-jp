{"version":3,"file":"CalendarNavigation.js","sources":["../src/calendar/CalendarNavigation.tsx"],"sourcesContent":["import {\n  Button,\n  type ButtonProps,\n  Dropdown,\n  type DropdownProps,\n  Option,\n  type OptionProps,\n  Tooltip,\n  type TooltipProps,\n  makePrefixer,\n  useIcon,\n  useListControlContext,\n} from \"@salt-ds/core\";\nimport { clsx } from \"clsx\";\nimport {\n  type ComponentPropsWithRef,\n  type MouseEventHandler,\n  type SyntheticEvent,\n  forwardRef,\n  useCallback,\n  useMemo,\n} from \"react\";\nimport { useCalendarContext } from \"./internal/CalendarContext\";\nimport { CALENDAR_MAX_YEAR, CALENDAR_MIN_YEAR } from \"./useCalendarSelection\";\n\nimport {\n  CalendarDate,\n  type DateValue,\n  isSameMonth,\n  isSameYear,\n} from \"@internationalized/date\";\nimport { useComponentCssInjection } from \"@salt-ds/styles\";\nimport { useWindow } from \"@salt-ds/window\";\nimport calendarNavigationCss from \"./CalendarNavigation.css\";\nimport { formatDate } from \"./formatDate\";\nimport { monthDiff, monthsForLocale } from \"./internal/utils\";\n\ntype DateDropdownProps = DropdownProps<DateValue>;\n\n/**\n * Props for the CalendarNavigation component.\n */\nexport interface CalendarNavigationProps extends ComponentPropsWithRef<\"div\"> {\n  /**\n   * Props for the month dropdown component.\n   */\n  MonthDropdownProps?: DateDropdownProps;\n\n  /**\n   * Props for the year dropdown component.\n   */\n  YearDropdownProps?: DateDropdownProps;\n\n  /**\n   * Callback fired when a month is selected.\n   * @param event - The change event.\n   */\n  onMonthSelect?: DateDropdownProps[\"onChange\"];\n\n  /**\n   * Callback fired when a year is selected.\n   * @param event - The change event.\n   */\n  onYearSelect?: DateDropdownProps[\"onChange\"];\n\n  /**\n   * Callback fired when navigating to the next month.\n   * @param event - The click event.\n   */\n  onNavigateNext?: ButtonProps[\"onClick\"];\n\n  /**\n   * Callback fired when navigating to the previous month.\n   * @param event - The click event.\n   */\n  onNavigatePrevious?: ButtonProps[\"onClick\"];\n\n  /**\n   * If `true`, hides the year dropdown.\n   */\n  hideYearDropdown?: boolean;\n\n  /**\n   * The step value for navigation. Defaults to 1.\n   */\n  step?: number;\n  /**\n   * Format the month dropdown values\n   * @param date\n   */\n  formatMonth?: (date: DateValue) => string;\n  /**\n   * Format the year dropdown values\n   * @param date\n   */\n  formatYear?: (date: DateValue) => string;\n}\n\ninterface OptionWithTooltipProps extends OptionProps {\n  value: DateValue;\n  tooltipContent?: string;\n}\n\nconst withBaseName = makePrefixer(\"saltCalendarNavigation\");\n\nconst ConditionalTooltip: React.FC<TooltipProps> = ({\n  children,\n  disabled = true,\n  ...rest\n}) => {\n  if (disabled) {\n    return <>{children}</>;\n  }\n  return <Tooltip {...rest}>{children}</Tooltip>;\n};\n\nfunction generateYearsBetweenRange(\n  minYear: number,\n  maxYear: number,\n): DateValue[] {\n  const years: DateValue[] = [];\n  for (let year = minYear; year <= maxYear; year++) {\n    years.push(new CalendarDate(year, 1, 1));\n  }\n  return years;\n}\n\nfunction useCalendarNavigation() {\n  const {\n    state: { visibleMonth, minDate, maxDate, locale, timeZone },\n    helpers: {\n      setVisibleMonth,\n      isDayVisible,\n      isOutsideAllowedYears,\n      isOutsideAllowedMonths,\n    },\n  } = useCalendarContext();\n\n  const moveToNextMonth = useCallback(\n    (event: SyntheticEvent, step = 1) => {\n      setVisibleMonth(event, visibleMonth.add({ months: step }));\n    },\n    [setVisibleMonth, visibleMonth],\n  );\n\n  const moveToPreviousMonth = useCallback(\n    (event: SyntheticEvent, step = 1) => {\n      setVisibleMonth(event, visibleMonth.subtract({ months: step }));\n    },\n    [setVisibleMonth, visibleMonth],\n  );\n\n  const moveToMonth = useCallback(\n    (event: SyntheticEvent, month: DateValue) => {\n      let newMonth = month;\n\n      if (!isOutsideAllowedYears(newMonth)) {\n        if (isOutsideAllowedMonths(newMonth)) {\n          // If month is navigable we should move to the closest navigable month\n          const navigableMonths = monthsForLocale(visibleMonth, locale).filter(\n            (n) => !isOutsideAllowedMonths(n),\n          );\n          newMonth = navigableMonths.reduce((closestMonth, currentMonth) =>\n            Math.abs(monthDiff(currentMonth, newMonth)) <\n            Math.abs(monthDiff(closestMonth, newMonth))\n              ? currentMonth\n              : closestMonth,\n          );\n        }\n        setVisibleMonth(event, newMonth);\n      }\n    },\n    [\n      isOutsideAllowedYears,\n      isOutsideAllowedMonths,\n      setVisibleMonth,\n      visibleMonth,\n      locale,\n    ],\n  );\n\n  const months: DateValue[] = useMemo(\n    () => monthsForLocale(visibleMonth, locale),\n    [visibleMonth, locale],\n  );\n\n  const years: DateValue[] = useMemo(\n    () =>\n      generateYearsBetweenRange(\n        Math.min(minDate ? minDate.year : CALENDAR_MIN_YEAR, visibleMonth.year),\n        Math.max(maxDate ? maxDate.year : CALENDAR_MAX_YEAR, visibleMonth.year),\n      ),\n    [minDate, maxDate, visibleMonth.year],\n  );\n\n  const selectedMonth: DateValue | undefined = months.find((month: DateValue) =>\n    isSameMonth(month, visibleMonth),\n  );\n  const selectedYear: DateValue | undefined = years.find((year: DateValue) =>\n    isSameYear(year, visibleMonth),\n  );\n\n  const canNavigatePrevious = !(minDate && isDayVisible(minDate));\n  const canNavigateNext = !(maxDate && isDayVisible(maxDate));\n\n  return useMemo(\n    () => ({\n      moveToNextMonth,\n      moveToPreviousMonth,\n      moveToMonth,\n      visibleMonth,\n      months,\n      years,\n      canNavigateNext,\n      canNavigatePrevious,\n      selectedMonth,\n      selectedYear,\n      isOutsideAllowedMonths,\n      locale,\n      timeZone,\n    }),\n    [\n      months,\n      moveToPreviousMonth,\n      moveToNextMonth,\n      moveToMonth,\n      visibleMonth,\n      years,\n      canNavigateNext,\n      canNavigatePrevious,\n      selectedMonth,\n      selectedYear,\n      isOutsideAllowedMonths,\n      locale,\n      timeZone,\n    ],\n  );\n}\n\nconst OptionWithTooltip = ({\n  value,\n  children,\n  disabled = false,\n  tooltipContent,\n}: OptionWithTooltipProps) => {\n  const { activeState, openState } = useListControlContext();\n  const open = activeState?.value === value;\n  return (\n    <ConditionalTooltip\n      placement=\"right\"\n      open={open && openState}\n      disabled={!disabled}\n      content={tooltipContent}\n      enterDelay={0} // --salt-duration-instant\n      leaveDelay={0} // --salt-duration-instant\n    >\n      <Option value={value} disabled={disabled}>\n        {children}\n      </Option>\n    </ConditionalTooltip>\n  );\n};\n\nexport const CalendarNavigation = forwardRef<\n  HTMLDivElement,\n  CalendarNavigationProps\n>(function CalendarNavigation(props, ref) {\n  const {\n    className,\n    formatMonth: formatMonthProp,\n    formatYear: formatYearProp,\n    MonthDropdownProps,\n    YearDropdownProps,\n    hideYearDropdown,\n    step = 1,\n    ...rest\n  } = props;\n\n  const targetWindow = useWindow();\n  useComponentCssInjection({\n    testId: \"salt-calendar-navigation\",\n    css: calendarNavigationCss,\n    window: targetWindow,\n  });\n\n  const { NextIcon, PreviousIcon } = useIcon();\n\n  const {\n    moveToPreviousMonth,\n    moveToNextMonth,\n    moveToMonth,\n    months,\n    years,\n    canNavigateNext,\n    canNavigatePrevious,\n    selectedMonth,\n    selectedYear,\n    isOutsideAllowedMonths,\n    locale,\n  } = useCalendarNavigation();\n\n  const handleNavigatePrevious: MouseEventHandler<HTMLButtonElement> =\n    useCallback(\n      (event) => {\n        moveToPreviousMonth(event, step);\n      },\n      [moveToPreviousMonth, step],\n    );\n\n  const handleNavigateNext: MouseEventHandler<HTMLButtonElement> = useCallback(\n    (event) => {\n      moveToNextMonth(event, step);\n    },\n    [moveToNextMonth, step],\n  );\n\n  const handleMonthSelect = useCallback(\n    (event: SyntheticEvent, month: DateValue[]) => {\n      moveToMonth(event, month[0]);\n    },\n    [moveToMonth],\n  );\n\n  const handleYearSelect = useCallback(\n    (event: SyntheticEvent, year: DateValue[]) => {\n      moveToMonth(event, year[0]);\n    },\n    [moveToMonth],\n  );\n\n  const formatMonth = useCallback(\n    (date?: DateValue) => {\n      if (date && formatMonthProp) {\n        return formatMonthProp(date);\n      }\n      return !date\n        ? \"\"\n        : formatDate(date, locale, {\n            month: hideYearDropdown ? \"long\" : \"short\",\n            day: undefined,\n            year: undefined,\n          });\n    },\n    [formatMonthProp],\n  );\n\n  const formatYear = useCallback(\n    (date?: DateValue) => {\n      if (date && formatYearProp) {\n        return formatYearProp(date);\n      }\n      return !date ? \"\" : `${date.year}`;\n    },\n    [formatYearProp],\n  );\n\n  return (\n    <div\n      className={clsx(\n        withBaseName(),\n        { [withBaseName(\"hideYearDropdown\")]: hideYearDropdown },\n        className,\n      )}\n      ref={ref}\n      {...rest}\n    >\n      <ConditionalTooltip\n        placement=\"top\"\n        disabled={canNavigatePrevious}\n        content=\"Past dates are out of range\"\n        enterDelay={0} // --salt-duration-instant\n        leaveDelay={0} // --salt-duration-instant\n      >\n        <Button\n          disabled={!canNavigatePrevious}\n          appearance=\"transparent\"\n          sentiment=\"neutral\"\n          onClick={handleNavigatePrevious}\n          focusableWhenDisabled={true}\n        >\n          <PreviousIcon aria-label=\"Previous Month\" />\n        </Button>\n      </ConditionalTooltip>\n      <div className={clsx({ [withBaseName(\"dropdowns\")]: !hideYearDropdown })}>\n        <Dropdown\n          aria-label=\"Month Dropdown\"\n          selected={selectedMonth ? [selectedMonth] : []}\n          value={formatMonth(selectedMonth)}\n          onSelectionChange={handleMonthSelect}\n          {...MonthDropdownProps}\n        >\n          {months.map((month) => (\n            <OptionWithTooltip\n              key={formatMonth(month)}\n              value={month}\n              disabled={isOutsideAllowedMonths(month)}\n              tooltipContent=\"This month is out of range\"\n            >\n              {formatMonth(month)}\n            </OptionWithTooltip>\n          ))}\n        </Dropdown>\n        {!hideYearDropdown && (\n          <Dropdown\n            aria-label=\"Year Dropdown\"\n            selected={selectedYear ? [selectedYear] : []}\n            value={formatYear(selectedYear)}\n            onSelectionChange={handleYearSelect}\n            {...YearDropdownProps}\n          >\n            {years.map((year) => (\n              <OptionWithTooltip key={formatYear(year)} value={year}>\n                {formatYear(year)}\n              </OptionWithTooltip>\n            ))}\n          </Dropdown>\n        )}\n      </div>\n      <ConditionalTooltip\n        placement=\"top\"\n        disabled={canNavigateNext}\n        content=\"Future dates are out of range\"\n        enterDelay={0} // --salt-duration-instant\n        leaveDelay={0} // --salt-duration-instant\n      >\n        <Button\n          disabled={!canNavigateNext}\n          appearance=\"transparent\"\n          sentiment=\"neutral\"\n          onClick={handleNavigateNext}\n          focusableWhenDisabled={true}\n        >\n          <NextIcon aria-label=\"Next Month\" />\n        </Button>\n      </ConditionalTooltip>\n    </div>\n  );\n});\n"],"names":["CalendarNavigation","calendarNavigationCss"],"mappings":"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"}