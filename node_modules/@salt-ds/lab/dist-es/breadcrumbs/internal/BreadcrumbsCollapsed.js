import { jsx } from 'react/jsx-runtime';
import { useIcon } from '@salt-ds/core';
import { Children, isValidElement, useCallback } from 'react';
import { MenuButton } from '../../menu-button/MenuButton.js';
import { useFocusMenuRemount } from './useFocusMenuRemount.js';

const BreadcrumbsCollapsed = ({
  children,
  CascadingMenuProps,
  accessibleText,
  ...rest
}) => {
  const keys = Children.map(children, (child) => {
    if (isValidElement(child)) {
      return child.key;
    }
    return "";
  });
  const { OverflowIcon } = useIcon();
  const key = keys ? keys.join("") : "";
  const { ref, shouldFocusOnMount } = useFocusMenuRemount(key);
  const itemToString = useCallback((child) => {
    if (!child) {
      return "";
    }
    const { overflowLabel, tooltipText, children: children2 } = child.props;
    return overflowLabel || tooltipText || String(children2);
  }, []);
  const onItemClick = useCallback(
    (sourceItem, event) => {
      shouldFocusOnMount.current = true;
    },
    [shouldFocusOnMount]
  );
  const menuItems = [];
  Children.forEach(children, (x) => {
    if (isValidElement(x)) {
      menuItems.push({ props: x.props });
    }
  });
  return /* @__PURE__ */ jsx(MenuButton, {
    CascadingMenuProps: {
      initialSource: {
        menuItems
      },
      itemToString,
      onItemClick,
      minWidth: 0,
      ...CascadingMenuProps
    },
    hideCaret: true,
    ...rest,
    ref,
    children: /* @__PURE__ */ jsx(OverflowIcon, {})
  });
};

export { BreadcrumbsCollapsed };
//# sourceMappingURL=BreadcrumbsCollapsed.js.map
