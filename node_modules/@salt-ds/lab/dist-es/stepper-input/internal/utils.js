const ACCEPT_INPUT = /^[-+]?[0-9]*\.?([0-9]+)?/g;
const toFixedDecimalPlaces = (inputNumber, decimalPlaces) => inputNumber.toFixed(decimalPlaces);
const isAllowedNonNumeric = (inputCharacter) => {
  if (typeof inputCharacter === "number")
    return;
  return "-+".includes(inputCharacter) && inputCharacter.length === 1 || inputCharacter === "";
};
const toFloat = (inputValue) => {
  if (isAllowedNonNumeric(inputValue))
    return 0;
  return Number.parseFloat(inputValue.toString());
};
const sanitizedInput = (numberString) => (numberString.match(ACCEPT_INPUT) || []).join("");
const isAtMax = (value, max) => {
  if (value === void 0)
    return true;
  return toFloat(value) >= max;
};
const isAtMin = (value, min) => {
  if (value === void 0)
    return true;
  return toFloat(value) <= min;
};
const isOutOfRange = (value, min, max) => {
  if (value === void 0)
    return true;
  const floatValue = toFloat(value);
  return floatValue > max || floatValue < min;
};

export { ACCEPT_INPUT, isAllowedNonNumeric, isAtMax, isAtMin, isOutOfRange, sanitizedInput, toFixedDecimalPlaces, toFloat };
//# sourceMappingURL=utils.js.map
