import { type SelectionStrategy } from "../common-hooks";
import { type ListHookProps, type ListHookResult } from "../list";
import type { DropdownHookProps, DropdownHookResult } from "./dropdownTypes";
export interface DropdownListHookProps<Item, Strategy extends SelectionStrategy> extends Partial<Omit<DropdownHookProps, "onKeyDown">>, Omit<ListHookProps<Item, Strategy>, "containerRef"> {
    itemToString?: (item: Item) => string;
}
export interface DropdownListHookResult<Item, Selection extends SelectionStrategy> extends Partial<ListHookResult<Item, Selection>>, Partial<DropdownHookResult> {
    onOpenChange: any;
    triggerLabel?: string;
}
export declare const useDropdown: <Item, Selection_1 extends SelectionStrategy = "default">({ collectionHook, defaultHighlightedIndex: defaultHighlightedIndexProp, defaultIsOpen, defaultSelected, highlightedIndex: highlightedIndexProp, isOpen: isOpenProp, itemToString, onHighlight, onOpenChange, onSelectionChange, onSelect, selected, selectionStrategy, }: DropdownListHookProps<Item, Selection_1>) => DropdownListHookResult<Item, Selection_1>;
