import { type ReactElement } from "react";
import type { CollectionHookResult } from "./collectionTypes";
export interface collectionContext<T> {
    collection: CollectionHookResult<T>;
}
export declare const CollectionContext: import("react").Context<CollectionHookResult<any> | undefined>;
interface ContextProviderProps<Item> {
    children: ReactElement;
    collectionHook: CollectionHookResult<Item>;
}
export declare function CollectionProvider<Item>({ children, collectionHook, ...props }: ContextProviderProps<Item>): import("react/jsx-runtime").JSX.Element;
export declare function useCollection<Item>(): CollectionHookResult<Item> | undefined;
export {};
