import type { ElementType, HTMLAttributes } from "react";
import type { FormFieldValidationStatus } from "./FormFieldLegacy";
import { type NecessityIndicatorOptions } from "./NecessityIndicator";
import { type StatusIndicatorProps } from "./StatusIndicator";
export interface FormLabelProps extends HTMLAttributes<HTMLLabelElement>, NecessityIndicatorOptions {
    /**
     * Whether the form field is disabled.
     */
    disabled?: boolean;
    /**
     * Adjusts whether the StatusIndicator component is shown
     */
    hasStatusIndicator?: boolean;
    /**
     * The label value for the FormLabel
     */
    label?: string;
    /**
     * An optional renderer function used to customize the necessity adornment
     */
    NecessityIndicator?: ElementType<NecessityIndicatorOptions>;
    /**
     * Whether the form field is readOnly.
     */
    readOnly?: boolean;
    /**
     * Props used to configure the StatusIndicator component if hasStatusIndicator is true
     */
    StatusIndicatorProps?: Partial<StatusIndicatorProps>;
    /**
     * The status for the FormField: Must be one of: 'error'|'warning'|undefined
     */
    validationStatus?: FormFieldValidationStatus;
    /**
     * Text to be shown in the Tooltip.
     */
    tooltipText?: string;
}
export declare const FormLabel: ({ label, NecessityIndicator, required, displayedNecessity, hasStatusIndicator, StatusIndicatorProps, validationStatus, necessityText, className, disabled, readOnly, tooltipText, ...restProps }: FormLabelProps) => import("react/jsx-runtime").JSX.Element;
