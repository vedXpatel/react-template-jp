import type { RefObject } from "react";
import type { SliderChangeHandler, SliderValue, ThumbIndex } from "../types";
export declare const getValue: (trackRef: RefObject<Element>, min: number, max: number, step: number, clientX: number) => number;
export declare const setValue: (value: SliderValue, newValue: number, index: ThumbIndex, onChange: SliderChangeHandler) => void;
export declare const roundToStep: (value: number, step: number) => number;
export declare const clampValue: (value: number, [min, max]: number[]) => number;
export declare const getPercentage: (min: number, max: number, value: number) => number;
export declare const getPercentageDifference: (min: number, max: number, value: number[]) => string;
export declare const getPercentageOffset: (min: number, max: number, value: number[]) => string;
export declare const countDecimalPlaces: (num: number) => number;
export declare const getMarkStyles: (min: number, max: number, step: number) => {
    label: string;
    value: number;
    position: string;
}[];
export declare const getNearestIndex: (value: SliderValue, newValue: number) => ThumbIndex;
export declare const preventOverlappingValues: (value: SliderValue, newValue: number, index: ThumbIndex) => number;
export declare const parseValueProp: (value: number[] | undefined, min: number, max: number) => SliderValue | undefined;
