import { type ComponentPropsWithoutRef, type ReactNode } from "react";
import { type UseCalendarMultiSelectProps, type UseCalendarOffsetProps, type UseCalendarRangeProps, type UseCalendarSingleProps } from "./useCalendar";
/**
 * Base props for the Calendar component.
 */
export interface CalendarBaseProps extends ComponentPropsWithoutRef<"div"> {
    /**
     * The content to be rendered inside the Calendar.
     */
    children: ReactNode;
    /**
     * If `true`, hides dates that are out of the selectable range.
     */
    hideOutOfRangeDates?: boolean;
}
/**
 * Props for the Calendar component with single date selection.
 */
export interface CalendarSingleProps extends CalendarBaseProps, UseCalendarSingleProps {
    /**
     * The selection variant, set to "single".
     */
    selectionVariant: "single";
}
/**
 * Props for the Calendar component with date range selection.
 */
export interface CalendarRangeProps extends CalendarBaseProps, UseCalendarRangeProps {
    /**
     * The selection variant, set to "range".
     */
    selectionVariant: "range";
}
/**
 * Props for the Calendar component with multi-select date selection.
 */
export interface CalendarMultiSelectProps extends CalendarBaseProps, UseCalendarMultiSelectProps {
    /**
     * The selection variant, set to "multiselect".
     */
    selectionVariant: "multiselect";
}
/**
 * Props for the Calendar component with offset date selection.
 */
export interface CalendarOffsetProps extends CalendarBaseProps, UseCalendarOffsetProps {
    /**
     * The selection variant, set to "offset".
     */
    selectionVariant: "offset";
}
/**
 * Type representing the props for the Calendar component with various selection variants.
 */
export declare type CalendarProps = CalendarSingleProps | CalendarRangeProps | CalendarMultiSelectProps | CalendarOffsetProps;
export declare const Calendar: import("react").ForwardRefExoticComponent<CalendarProps & import("react").RefAttributes<HTMLDivElement>>;
