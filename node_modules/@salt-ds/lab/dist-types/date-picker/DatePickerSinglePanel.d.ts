import { type DateValue } from "@internationalized/date";
import { type ComponentPropsWithoutRef, type SyntheticEvent } from "react";
import { type CalendarDateGridProps, type CalendarNavigationProps, type CalendarSingleProps, type CalendarWeekHeaderProps } from "../calendar";
/**
 * Props for the DatePickerSinglePanel component.
 * @template T - The type of the selected date.
 */
export interface DatePickerSinglePanelProps<T> extends ComponentPropsWithoutRef<"div"> {
    /**
     * Callback fired when a date is selected.
     * @param event - The synthetic event.
     * @param selectedDate - The selected date or null.
     */
    onSelect?: (event: SyntheticEvent, selectedDate?: T | null) => void;
    /**
     * Helper text to be displayed below the date picker.
     */
    helperText?: string;
    /**
     * The currently visible month.
     */
    visibleMonth?: DateValue;
    /**
     * The default visible month.
     */
    defaultVisibleMonth?: DateValue;
    /**
     * Callback fired when the visible month changes.
     * @param event - The synthetic event.
     * @param visibleMonth - The new visible month.
     */
    onVisibleMonthChange?: (event: SyntheticEvent, visibleMonth: DateValue) => void;
    /**
     * Props to be passed to the Calendar component.
     */
    CalendarProps?: Partial<Omit<CalendarSingleProps, "selectionVariant" | "selectedDate" | "defaultSelectedDate" | "onSelectedDateChange" | "onVisibleMonthChange">>;
    /**
     * Props to be passed to the CalendarNavigation component.
     */
    CalendarNavigationProps?: CalendarNavigationProps;
    /**
     * Props to be passed to the CalendarWeekHeader component.
     */
    CalendarWeekHeaderProps?: CalendarWeekHeaderProps;
    /**
     * Props to be passed to the CalendarDataGrid component.
     */
    CalendarDataGridProps?: CalendarDateGridProps;
}
export declare const DatePickerSinglePanel: import("react").ForwardRefExoticComponent<DatePickerSinglePanelProps<DateValue> & import("react").RefAttributes<HTMLDivElement>>;
