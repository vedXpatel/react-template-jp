{"version":3,"file":"utils.js","sources":["../src/calendar/internal/utils.ts"],"sourcesContent":["import {\n  type CalendarDate,\n  DateFormatter,\n  type DateValue,\n  createCalendar,\n  endOfMonth,\n  getLocalTimeZone,\n  isSameMonth,\n  startOfMonth,\n  startOfWeek,\n  startOfYear,\n  toCalendarDate,\n  today,\n} from \"@internationalized/date\";\nimport { getCurrentLocale } from \"../formatDate\";\n\nexport function formatDate(\n  date: DateValue,\n  locale: string,\n  options?: Intl.DateTimeFormatOptions,\n) {\n  const timeLocale = locale || getCurrentLocale();\n  const timeZone = options?.timeZone || getLocalTimeZone();\n  const formatter = new DateFormatter(timeLocale, options);\n  return formatter.format(date.toDate(timeZone));\n}\n\nexport function getCalendar(locale: string) {\n  const calendarIdentifier = new DateFormatter(locale).resolvedOptions()\n    .calendar;\n  return createCalendar(calendarIdentifier);\n}\n\ntype WeekdayFormat = Intl.DateTimeFormatOptions[\"weekday\"];\n\nexport function daysForLocale(weekday: WeekdayFormat, locale: string) {\n  return [...Array(7).keys()].map((day) =>\n    formatDate(\n      startOfWeek(today(getLocalTimeZone()), locale).add({\n        days: day,\n      }),\n      locale,\n      { weekday: weekday || \"long\" },\n    ),\n  );\n}\n\nexport function monthsForLocale(currentYear: DateValue, locale: string) {\n  const calendar = getCalendar(locale);\n  return [...Array(calendar.getMonthsInYear(currentYear)).keys()].map((month) =>\n    startOfYear(currentYear).add({ months: month }),\n  );\n}\n\nfunction mapDate(currentDate: DateValue, currentMonth: DateValue) {\n  return {\n    date: currentDate,\n    dateOfMonth: currentDate.month,\n    isCurrentMonth: isSameMonth(currentDate, currentMonth),\n  };\n}\n\nexport function generateVisibleDays(currentMonth: DateValue, locale: string) {\n  const totalDays = 6 * 7;\n  const startDate = startOfWeek(startOfMonth(currentMonth), locale);\n\n  return [...Array(totalDays).keys()].map((dayDelta) => {\n    const day = startDate.add({ days: dayDelta });\n    return mapDate(day, currentMonth);\n  });\n}\n\nexport function monthDiff(a: DateValue, b: DateValue) {\n  return b.month - a.month + 12 * (b.year - a.year);\n}\n\nexport function generateDatesForMonth(date: DateValue): CalendarDate[] {\n  const calendarDate = toCalendarDate(date);\n  const startDate = startOfMonth(calendarDate);\n  const endDate = endOfMonth(calendarDate);\n  const dates = [];\n  for (\n    let currentDate = startDate;\n    currentDate.compare(endDate) <= 0;\n    currentDate = currentDate.add({ days: 1 })\n  ) {\n    dates.push(currentDate);\n  }\n  return dates;\n}\n"],"names":["date","getCurrentLocale","getLocalTimeZone","DateFormatter","createCalendar","startOfWeek","today","startOfYear","isSameMonth","startOfMonth","toCalendarDate","endOfMonth"],"mappings":"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"}