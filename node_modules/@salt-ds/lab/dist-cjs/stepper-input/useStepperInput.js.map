{"version":3,"file":"useStepperInput.js","sources":["../src/stepper-input/useStepperInput.ts"],"sourcesContent":["import {\n  type Dispatch,\n  type MouseEvent,\n  type MutableRefObject,\n  type SetStateAction,\n  type SyntheticEvent,\n  useCallback,\n} from \"react\";\nimport type { StepperInputProps } from \"./StepperInput\";\nimport { useActivateWhileMouseDown } from \"./internal/useActivateWhileMouseDown\";\nimport {\n  isAtMax,\n  isAtMin,\n  toFixedDecimalPlaces,\n  toFloat,\n} from \"./internal/utils\";\n\n/**\n * Manages increment / decrement logic\n */\nexport const useStepperInput = ({\n  decimalPlaces = 0,\n  disabled,\n  inputRef,\n  max = Number.MAX_SAFE_INTEGER,\n  min = Number.MIN_SAFE_INTEGER,\n  onChange,\n  readOnly,\n  setValue,\n  step = 1,\n  stepBlock = 10,\n  value,\n}: Pick<\n  StepperInputProps,\n  | \"decimalPlaces\"\n  | \"disabled\"\n  | \"inputRef\"\n  | \"max\"\n  | \"min\"\n  | \"onChange\"\n  | \"readOnly\"\n  | \"step\"\n  | \"stepBlock\"\n  | \"value\"\n> & {\n  setValue: Dispatch<SetStateAction<string | number | undefined>>;\n  inputRef: MutableRefObject<HTMLInputElement | null>;\n}) => {\n  const setValueInRange = useCallback(\n    (event: SyntheticEvent | undefined, modifiedValue: number) => {\n      if (readOnly) return;\n      let nextValue = modifiedValue;\n      if (nextValue < min) nextValue = min;\n      if (nextValue > max) nextValue = max;\n\n      const roundedValue = toFixedDecimalPlaces(nextValue, decimalPlaces);\n      if (Number.isNaN(toFloat(roundedValue))) return;\n\n      setValue(roundedValue);\n\n      onChange?.(event, roundedValue);\n    },\n    [decimalPlaces, min, max, onChange, readOnly, setValue],\n  );\n\n  const decrementValue = useCallback(\n    (event?: SyntheticEvent, block?: boolean) => {\n      if (value === undefined || isAtMin(value, min)) return;\n      const decrementStep = block ? stepBlock : step;\n      const nextValue =\n        value === \"\" ? -decrementStep : toFloat(value) - decrementStep;\n      setValueInRange(event, nextValue);\n    },\n    [value, min, step, stepBlock, setValueInRange],\n  );\n\n  const incrementValue = useCallback(\n    (event?: SyntheticEvent, block?: boolean) => {\n      if (value === undefined || isAtMax(value, max)) return;\n      const incrementStep = block ? stepBlock : step;\n      const nextValue =\n        value === \"\" ? incrementStep : toFloat(value) + incrementStep;\n      setValueInRange(event, nextValue);\n    },\n    [value, max, step, stepBlock, setValueInRange],\n  );\n\n  const { activate: decrementSpinner } = useActivateWhileMouseDown(\n    (event?: SyntheticEvent) => decrementValue(event),\n    isAtMin(value, min),\n  );\n\n  const { activate: incrementSpinner } = useActivateWhileMouseDown(\n    (event?: SyntheticEvent) => incrementValue(event),\n    isAtMax(value, max),\n  );\n\n  const handleButtonMouseUp = () => inputRef.current?.focus();\n\n  const commonButtonProps = {\n    \"aria-hidden\": true,\n    tabIndex: -1,\n    onMouseUp: handleButtonMouseUp,\n  };\n\n  const incrementButtonProps = {\n    ...commonButtonProps,\n    \"aria-label\": \"increment value\",\n    disabled: disabled || isAtMax(value, max),\n    onMouseDown: (event: MouseEvent<HTMLButtonElement>) => {\n      if (event.nativeEvent.button !== 0) {\n        // To match closely with <input type='input'>\n        return;\n      }\n      incrementSpinner(event);\n    },\n  };\n\n  const decrementButtonProps = {\n    ...commonButtonProps,\n    \"aria-label\": \"decrement value\",\n    disabled: disabled || isAtMin(value, min),\n    onMouseDown: (event: MouseEvent<HTMLButtonElement>) => {\n      if (event.nativeEvent.button !== 0) {\n        // To match closely with <input type='input'>\n        return;\n      }\n      decrementSpinner(event);\n    },\n  };\n\n  return {\n    incrementButtonProps,\n    decrementButtonProps,\n    incrementValue,\n    decrementValue,\n  };\n};\n"],"names":["useCallback","toFixedDecimalPlaces","toFloat","isAtMin","isAtMax","useActivateWhileMouseDown"],"mappings":"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"}