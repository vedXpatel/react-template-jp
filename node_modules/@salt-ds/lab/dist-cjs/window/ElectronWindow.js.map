{"version":3,"file":"ElectronWindow.js","sources":["../src/window/ElectronWindow.tsx"],"sourcesContent":["import {\n  SaltProvider,\n  useForkRef,\n  useIsomorphicLayoutEffect,\n} from \"@salt-ds/core\";\nimport { forwardRef, useCallback, useEffect, useRef, useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Window as SaltWindow, type WindowProps, isDesktop } from \"../window\";\n\nimport { useComponentCssInjection } from \"@salt-ds/styles\";\nimport { useWindow } from \"@salt-ds/window\";\nimport electronWindowCss from \"./ElectronWindow.css\";\nimport { WindowParentContext, useWindowParentContext } from \"./desktop-utils\";\n\nconst Window = forwardRef<HTMLDivElement, WindowProps>(function ElectronWindow(\n  { className, children, id = \"dialog\", open = true, style = {}, ...rest },\n  forwardedRef,\n): JSX.Element | null {\n  const { top, left, position, ...styleRest } = style;\n\n  const targetWindow = useWindow();\n  useComponentCssInjection({\n    testId: \"salt-electron-window\",\n    css: electronWindowCss,\n    window: targetWindow,\n  });\n\n  const [mountNode, setMountNode] = useState<Element | null>(null);\n  const windowRoot = useRef<HTMLDivElement>(null);\n\n  const forkedRef = useForkRef(forwardedRef, windowRoot);\n\n  if (!mountNode) {\n    const win = window.open(\"\", id);\n    win?.document.write(\n      `<html lang=\"en\"><head><title>${id}</title><base href=\"${location.origin}\"><style>body {margin: 0;}</style></head><body></body></html>`,\n    );\n    document.head.querySelectorAll(\"style\").forEach((htmlElement) => {\n      (win as Window).document.head.appendChild(htmlElement.cloneNode(true));\n    });\n    const bodyElement = (win as Window).document.body;\n    setMountNode(bodyElement);\n  }\n\n  const parentWindow = useWindowParentContext();\n\n  const closeWindow = useCallback(() => {\n    // biome-ignore lint/suspicious/noExplicitAny: any is simpler here.\n    const { ipcRenderer } = global as any;\n    if (ipcRenderer) {\n      ipcRenderer.send(\"window-close\", { id: id });\n    }\n  }, [id]);\n\n  // The timeout is required to give the Dialog component time to report the correct height\n  // otherwise the window will be smaller than expected\n  useEffect(() => {\n    setTimeout(() => {\n      if (windowRoot.current) {\n        const { scrollHeight: height, scrollWidth: width } = windowRoot.current;\n        // biome-ignore lint/suspicious/noExplicitAny: any is simpler here.\n        const { ipcRenderer } = global as any;\n        if (ipcRenderer) {\n          ipcRenderer.send(\"window-size\", {\n            id: id,\n            height: Math.ceil(height + 1),\n            width: Math.ceil(width + 1),\n          });\n        }\n      }\n    }, 80);\n  });\n\n  // The timeout is required to allow the window time to be moved into position and scaled\n  // before being shown to the user,\n  useEffect(() => {\n    // biome-ignore lint/suspicious/noExplicitAny: any is simpler here.\n    const { ipcRenderer } = global as any;\n    if (ipcRenderer) {\n      setTimeout(() => {\n        ipcRenderer.send(\"window-ready\", { id: id });\n      }, 100);\n    }\n\n    return () => {\n      closeWindow();\n    };\n  }, [closeWindow, id]);\n\n  // The timeout is required to give the Dialog component time to report the correct height\n  // otherwise the window will be smaller than expected\n  useIsomorphicLayoutEffect(() => {\n    setTimeout(() => {\n      // biome-ignore lint/suspicious/noExplicitAny: any is simpler here.\n      const { ipcRenderer } = global as any;\n      if (ipcRenderer) {\n        ipcRenderer.send(\"window-position\", {\n          id: id,\n          parentWindowID: parentWindow.id,\n          left: style.left,\n          top: style.top,\n        });\n      }\n    }, 90);\n  }, [style, id, parentWindow.id]);\n\n  return mountNode\n    ? ReactDOM.createPortal(\n        <SaltProvider>\n          <WindowParentContext.Provider\n            value={{\n              top: (style.top as number) + parentWindow.top,\n              left: (style.left as number) + parentWindow.left,\n              id: id,\n            }}\n          >\n            <div className=\"saltWindow\" ref={forkedRef}>\n              <div className={className} style={{ ...styleRest }} {...rest}>\n                {children}\n              </div>\n            </div>\n          </WindowParentContext.Provider>\n        </SaltProvider>,\n        mountNode,\n      )\n    : null;\n});\n\nexport const ElectronWindow = isDesktop ? Window : SaltWindow;\n"],"names":["forwardRef","ElectronWindow","useWindow","useComponentCssInjection","electronWindowCss","useState","useRef","useForkRef","useWindowParentContext","useCallback","useEffect","useIsomorphicLayoutEffect","ReactDOM","jsx","SaltProvider","WindowParentContext","isDesktop","SaltWindow"],"mappings":"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"}