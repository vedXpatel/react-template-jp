'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var jsxRuntime = require('react/jsx-runtime');
var core = require('@salt-ds/core');
var clsx = require('clsx');
var react = require('react');
require('./internal/FavoriteToggleWithTooltip.js');
var ContactDetailsContext = require('./internal/ContactDetailsContext.js');

const withBaseName = core.makePrefixer("saltContactPrimaryInfo");
const ContactPrimaryInfo = react.forwardRef(function ContactPrimaryInfo2(props, ref) {
  const {
    id: idProp,
    text,
    className,
    "aria-level": ariaLevel = 2,
    ...restProps
  } = props;
  const { setPrimary, setPrimaryId, secondaryId, tertiaryId, variant } = ContactDetailsContext.useContactDetailsContext();
  const id = core.useId(idProp);
  react.useEffect(() => {
    setPrimary(text || "");
    setPrimaryId(id);
    return () => {
      setPrimary(void 0);
      setPrimaryId(void 0);
    };
  }, [setPrimary, id, text, setPrimaryId]);
  return /* @__PURE__ */ jsxRuntime.jsx(core.Text, {
    ...restProps,
    maxRows: 1,
    id,
    ref,
    styleAs: variant === "default" ? "h2" : "h4",
    className: clsx.clsx(withBaseName(), className),
    role: "heading",
    "aria-labelledby": `${id} ${secondaryId != null ? secondaryId : null} ${tertiaryId != null ? tertiaryId : null}`,
    "aria-level": ariaLevel,
    "data-testid": "primary",
    children: text
  });
});

exports.ContactPrimaryInfo = ContactPrimaryInfo;
//# sourceMappingURL=ContactPrimaryInfo.js.map
