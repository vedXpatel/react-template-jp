'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var jsxRuntime = require('react/jsx-runtime');
var core = require('@salt-ds/core');
var clsx = require('clsx');
var react = require('react');
var Tabstrip = require('./Tabstrip.js');
var useTabs = require('./useTabs.js');
var styles = require('@salt-ds/styles');
var window = require('@salt-ds/window');
var Tabs$1 = require('./Tabs.css.js');

const withBaseName = core.makePrefixer("saltTabs");
const Tabs = react.forwardRef(function Tabs2({
  activeTabIndex: activeTabIndexProp,
  allowDragDrop,
  centered,
  children,
  className,
  defaultActiveTabIndex,
  editing,
  enableAddTab,
  enableCloseTab,
  enableRenameTab,
  onActiveChange: onActiveChangeProp,
  onAddTab,
  onCloseTab,
  onEnterEditMode,
  onExitEditMode,
  onMoveTab,
  overflowMenu,
  variant,
  ...htmlAttributes
}, forwardedRef) {
  const targetWindow = window.useWindow();
  styles.useComponentCssInjection({
    testId: "salt-tabs",
    css: Tabs$1,
    window: targetWindow
  });
  const tabstripRef = react.useRef(null);
  react.useImperativeHandle(
    forwardedRef,
    () => ({
      focus: () => {
        var _a;
        return (_a = tabstripRef.current) == null ? void 0 : _a.focus();
      }
    }),
    []
  );
  const { id, onActiveChange, activeTabIndex, tabPanel, tabs } = useTabs.useTabs({
    activeTabIndex: activeTabIndexProp,
    children,
    defaultActiveTabIndex,
    onActiveChange: onActiveChangeProp
  });
  const tabstripProps = {
    activeTabIndex,
    allowDragDrop,
    centered,
    editing,
    variant,
    enableAddTab,
    enableCloseTab,
    enableRenameTab,
    onAddTab,
    onCloseTab,
    onEnterEditMode,
    onExitEditMode,
    onMoveTab,
    overflowMenu
  };
  react.useCallback(
    (tabIndex) => {
      if (tabIndex === activeTabIndex) {
        return `${id}-${tabIndex}-panel`;
      }
    },
    [id, activeTabIndex]
  );
  return /* @__PURE__ */ jsxRuntime.jsxs("div", {
    ...htmlAttributes,
    className: clsx.clsx(withBaseName(), className),
    id: `${id}-tabs`,
    children: [
      /* @__PURE__ */ jsxRuntime.jsx(Tabstrip.Tabstrip, {
        ...tabstripProps,
        id,
        onActiveChange,
        ref: tabstripRef,
        source: tabs
      }),
      tabPanel
    ]
  });
});

exports.Tabs = Tabs;
//# sourceMappingURL=Tabs.js.map
