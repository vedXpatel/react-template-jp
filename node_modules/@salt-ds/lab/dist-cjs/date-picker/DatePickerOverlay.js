'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var jsxRuntime = require('react/jsx-runtime');
var core = require('@salt-ds/core');
var styles = require('@salt-ds/styles');
var window = require('@salt-ds/window');
var clsx = require('clsx');
var react = require('react');
var DatePickerOverlay$1 = require('./DatePickerOverlay.css.js');
var DatePickerOverlayProvider = require('./DatePickerOverlayProvider.js');

const withBaseName = core.makePrefixer("saltDatePickerOverlay");
const DatePickerOverlay = react.forwardRef(function DatePickerOverlay2({ className, children, ...rest }, ref) {
  const targetWindow = window.useWindow();
  styles.useComponentCssInjection({
    testId: "salt-date-picker-overlay",
    css: DatePickerOverlay$1,
    window: targetWindow
  });
  const { Component: FloatingComponent } = core.useFloatingComponent();
  const { a11yProps } = core.useFormFieldProps();
  const {
    state: { open, floatingUIResult },
    helpers: { getFloatingProps }
  } = DatePickerOverlayProvider.useDatePickerOverlay();
  const floatingRef = core.useForkRef(
    ref,
    floatingUIResult == null ? void 0 : floatingUIResult.floating
  );
  return /* @__PURE__ */ jsxRuntime.jsx(FloatingComponent, {
    className: clsx.clsx(withBaseName(), className),
    open: open || false,
    "aria-modal": "true",
    ref: floatingRef,
    focusManagerProps: (floatingUIResult == null ? void 0 : floatingUIResult.context) ? {
      context: floatingUIResult.context,
      initialFocus: 4
    } : void 0,
    ...getFloatingProps ? getFloatingProps({
      ...a11yProps,
      ...rest
    }) : rest,
    children
  });
});

exports.DatePickerOverlay = DatePickerOverlay;
//# sourceMappingURL=DatePickerOverlay.js.map
