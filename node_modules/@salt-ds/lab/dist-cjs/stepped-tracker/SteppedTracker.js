'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var jsxRuntime = require('react/jsx-runtime');
var core = require('@salt-ds/core');
var styles = require('@salt-ds/styles');
var window = require('@salt-ds/window');
var clsx = require('clsx');
var react = require('react');
var SteppedTrackerContext = require('./SteppedTrackerContext.js');
var SteppedTracker$1 = require('./SteppedTracker.css.js');

const withBaseName = core.makePrefixer("saltSteppedTracker");
const useCheckInvalidChildren = (children) => {
  react.useEffect(() => {
    if (process.env.NODE_ENV !== "production") {
      let hasInvalidChild = false;
      react.Children.forEach(children, (child) => {
        if (!react.isValidElement(child)) {
          hasInvalidChild = true;
        }
      });
      if (hasInvalidChild) {
        console.error(
          "Invalid child: children of SteppedTracker must be a TrackerStep component"
        );
      }
    }
  }, [children]);
};
const SteppedTracker = react.forwardRef(
  function SteppedTracker2({
    children,
    className,
    activeStep,
    orientation = "horizontal",
    ...restProps
  }, ref) {
    const targetWindow = window.useWindow();
    styles.useComponentCssInjection({
      testId: "salt-stepped-tracker",
      css: SteppedTracker$1,
      window: targetWindow
    });
    useCheckInvalidChildren(children);
    const totalSteps = react.Children.count(children);
    return /* @__PURE__ */ jsxRuntime.jsx(SteppedTrackerContext.SteppedTrackerProvider, {
      totalSteps,
      activeStep,
      children: /* @__PURE__ */ jsxRuntime.jsx("ul", {
        className: clsx.clsx(withBaseName(), className, withBaseName(orientation)),
        ref,
        ...restProps,
        children: react.Children.map(children, (child, i) => /* @__PURE__ */ jsxRuntime.jsx(SteppedTrackerContext.TrackerStepProvider, {
          stepNumber: i,
          children: child
        }))
      })
    });
  }
);

exports.SteppedTracker = SteppedTracker;
//# sourceMappingURL=SteppedTracker.js.map
