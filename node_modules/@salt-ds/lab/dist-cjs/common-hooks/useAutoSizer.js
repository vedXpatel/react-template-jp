'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var core = require('@salt-ds/core');
var react = require('react');

function useAutoSizer(props) {
  const { containerRef: ref, responsive, width, height } = props;
  const [size, setSize] = react.useState({ width, height });
  const handleResize = react.useCallback(function handleResize2(contentRect) {
    if (contentRect.width > 0 && contentRect.height > 0) {
      setSize({
        width: contentRect.width,
        height: contentRect.height
      });
    }
  }, []);
  core.useIsomorphicLayoutEffect(() => {
    setSize({ width, height });
  }, [width, height]);
  core.useIsomorphicLayoutEffect(() => {
    if (responsive) {
      let observer;
      if (ref.current) {
        handleResize(ref.current.getBoundingClientRect());
        observer = new ResizeObserver(
          ([{ contentRect }]) => {
          }
        );
        observer.observe(ref.current);
      }
      return () => {
        if (observer) {
          observer.disconnect();
        }
      };
    }
  }, [handleResize, responsive, ref]);
  return size;
}

exports.useAutoSizer = useAutoSizer;
//# sourceMappingURL=useAutoSizer.js.map
