import { jsxs, jsx } from 'react/jsx-runtime';
import { useComponentCssInjection } from '@salt-ds/styles';
import { useWindow } from '@salt-ds/window';
import { clsx } from 'clsx';
import { forwardRef } from 'react';
import { useIcon } from '../semantic-icon-provider/SemanticIconProvider.js';
import { StatusIndicator } from '../status-indicator/StatusIndicator.js';
import { makePrefixer } from '../utils/makePrefixer.js';
import '../utils/useFloatingUI/useFloatingUI.js';
import '../utils/useId.js';
import { useIsomorphicLayoutEffect } from '../utils/useIsomorphicLayoutEffect.js';
import '../salt-provider/SaltProvider.js';
import '../viewport/ViewportProvider.js';
import './AccordionGroup.js';
import './AccordionPanel.js';
import './Accordion.js';
import '../aria-announcer/AriaAnnouncerContext.js';
import '../avatar/Avatar.js';
import '../badge/Badge.js';
import '../banner/Banner.js';
import '../banner/BannerActions.js';
import '../banner/BannerContent.js';
import '../border-item/BorderItem.js';
import '../border-layout/BorderLayout.js';
import '../breakpoints/BreakpointProvider.js';
import '../button/Button.js';
import '../card/Card.js';
import '../checkbox/Checkbox.js';
import '../checkbox/CheckboxGroup.js';
import '@salt-ds/icons';
import '../combo-box/ComboBox.js';
import '../dialog/Dialog.js';
import '../dialog/DialogHeader.js';
import '../dialog/DialogActions.js';
import '../dialog/DialogContent.js';
import '../dialog/DialogContext.js';
import '../dialog/DialogCloseButton.js';
import '../divider/Divider.js';
import '../drawer/Drawer.js';
import '../drawer/DrawerCloseButton.js';
import '../dropdown/Dropdown.js';
import '../file-drop-zone/FileDropZone.js';
import '../file-drop-zone/FileDropZoneIcon.js';
import '../file-drop-zone/FileDropZoneTrigger.js';
import '../flex-item/FlexItem.js';
import '../flex-layout/FlexLayout.js';
import '../flow-layout/FlowLayout.js';
import '../form-field/FormField.js';
import '../form-field-context/FormFieldContext.js';
import '../text/Text.js';
import '../text/Code.js';
import '../text/Display.js';
import '../text/Headings.js';
import '../text/Label.js';
import '../text/TextAction.js';
import '../text/TextNotation.js';
import '../grid-item/GridItem.js';
import '../grid-layout/GridLayout.js';
import '../input/Input.js';
import '../interactable-card/InteractableCard.js';
import '../interactable-card/InteractableCardGroup.js';
import '../interactable-card/InteractableCardGroupContext.js';
import '../link/Link.js';
import '../link-card/LinkCard.js';
import '../list-box/ListBox.js';
import '../list-control/ListControlContext.js';
import '@floating-ui/react';
import '../menu/MenuContext.js';
import '../menu/MenuItem.js';
import '../menu/MenuPanel.js';
import '../menu/MenuPanelContext.js';
import '../menu/MenuTriggerContext.js';
import '../menu/MenuGroup.js';
import '../multiline-input/MultilineInput.js';
import '../navigation-item/NavigationItem.js';
import '../option/Option.js';
import '../option/OptionGroup.js';
import '../overlay/OverlayContext.js';
import '../overlay/OverlayPanel.js';
import '../overlay/OverlayPanelCloseButton.js';
import '../overlay/OverlayPanelContent.js';
import '../pagination/Pagination.js';
import '../pagination/Paginator.js';
import '../pagination/CompactInput.js';
import '../pagination/CompactPaginator.js';
import '../pagination/GoToInput.js';
import '../panel/Panel.js';
import '../parent-child-layout/ParentChildLayout.js';
import '../pill/Pill.js';
import '../progress/CircularProgress/CircularProgress.js';
import '../progress/LinearProgress/LinearProgress.js';
import '../radio-button/RadioButton.js';
import '../radio-button/RadioButtonGroup.js';
import '../scrim/Scrim.js';
import '../segmented-button-group/SegmentedButtonGroup.js';
import '../spinner/Spinner.js';
import '../stack-layout/StackLayout.js';
import '../status-adornment/StatusAdornment.js';
import '../toast/Toast.js';
import '../toast/ToastContent.js';
import '../split-layout/SplitLayout.js';
import '../switch/Switch.js';
import '../tag/Tag.js';
import '../toggle-button/ToggleButton.js';
import '../toggle-button-group/ToggleButtonGroup.js';
import '../toggle-button-group/ToggleButtonGroupContext.js';
import '../tooltip/Tooltip.js';
import { useAccordion } from './AccordionContext.js';
import css_248z from './AccordionHeader.css.js';

const withBaseName = makePrefixer("saltAccordionHeader");
function ExpansionIcon({ expanded }) {
  const { CollapseIcon, ExpandIcon } = useIcon();
  if (expanded) {
    return /* @__PURE__ */ jsx(CollapseIcon, {
      "aria-hidden": true,
      className: withBaseName("icon")
    });
  }
  return /* @__PURE__ */ jsx(ExpandIcon, {
    "aria-hidden": true,
    className: withBaseName("icon")
  });
}
const AccordionHeader = forwardRef(function AccordionHeader2(props, ref) {
  const { children, className, onClick, id, ...rest } = props;
  const {
    value,
    expanded,
    toggle,
    indicatorSide,
    disabled,
    headerId,
    panelId,
    setHeaderId,
    status
  } = useAccordion();
  const targetWindow = useWindow();
  useComponentCssInjection({
    testId: "salt-accordion-header",
    css: css_248z,
    window: targetWindow
  });
  const handleClick = (event) => {
    toggle(event);
    onClick == null ? void 0 : onClick(event);
  };
  useIsomorphicLayoutEffect(() => {
    if (id) {
      setHeaderId(id);
    }
  }, [id, setHeaderId]);
  return /* @__PURE__ */ jsxs("button", {
    ref,
    className: clsx(
      withBaseName(),
      { [withBaseName(status != null ? status : "")]: status },
      className
    ),
    disabled,
    onClick: handleClick,
    "aria-expanded": expanded,
    id: headerId,
    "aria-controls": panelId,
    value,
    type: "button",
    ...rest,
    children: [
      indicatorSide === "left" && /* @__PURE__ */ jsx(ExpansionIcon, {
        expanded
      }),
      /* @__PURE__ */ jsx("span", {
        className: withBaseName("content"),
        children
      }),
      status && !disabled && /* @__PURE__ */ jsx(StatusIndicator, {
        className: withBaseName("statusIndicator"),
        status
      }),
      indicatorSide === "right" && /* @__PURE__ */ jsx(ExpansionIcon, {
        expanded
      })
    ]
  });
});

export { AccordionHeader };
//# sourceMappingURL=AccordionHeader.js.map
