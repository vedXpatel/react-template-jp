import { jsx } from 'react/jsx-runtime';
import { isValidElement, cloneElement } from 'react';
import { mergeProps } from './mergeProps.js';

function renderProps(Type, props) {
  const { render, ...rest } = props;
  if (isValidElement(render)) {
    const renderProps2 = render.props;
    return cloneElement(render, mergeProps(rest, renderProps2));
  }
  const restProps = rest;
  if (typeof render === "function") {
    const renderedElement = render(restProps);
    if (isValidElement(renderedElement)) {
      return renderedElement;
    }
    throw new Error("Render function did not return a valid React element");
  }
  if (Type) {
    return /* @__PURE__ */ jsx(Type, {
      ...restProps
    });
  }
  throw new Error("Type or render should be provided");
}

export { renderProps };
//# sourceMappingURL=renderProps.js.map
