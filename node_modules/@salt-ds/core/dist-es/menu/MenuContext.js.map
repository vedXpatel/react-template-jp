{"version":3,"file":"MenuContext.js","sources":["../src/menu/MenuContext.ts"],"sourcesContent":["import type { useInteractions } from \"@floating-ui/react\";\nimport {\n  type Dispatch,\n  type MutableRefObject,\n  type SetStateAction,\n  useContext,\n} from \"react\";\nimport { type UseFloatingUIReturn, createContext } from \"../utils\";\n\ntype UseInteractionsReturn = ReturnType<typeof useInteractions>;\n\nexport interface MenuContextValue\n  extends Pick<\n      UseInteractionsReturn,\n      \"getItemProps\" | \"getReferenceProps\" | \"getFloatingProps\"\n    >,\n    Partial<Pick<UseFloatingUIReturn, \"context\" | \"refs\">> {\n  openState: boolean;\n  activeIndex: number | null;\n  getPanelPosition: () => Record<string, unknown>;\n  elementsRef: MutableRefObject<(HTMLDivElement | null)[]>;\n  focusInside: boolean;\n  setFocusInside: Dispatch<SetStateAction<boolean>>;\n  isNested: boolean;\n}\n\nexport const MenuContext = createContext<MenuContextValue>(\"MenuContext\", {\n  openState: false,\n  getReferenceProps: () => ({}),\n  getFloatingProps: () => ({}),\n  getPanelPosition: () => ({}),\n  getItemProps: () => ({}),\n  activeIndex: null,\n  elementsRef: { current: [] },\n  focusInside: false,\n  setFocusInside: () => undefined,\n  isNested: false,\n});\n\nexport function useMenuContext() {\n  return useContext(MenuContext);\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0Ba,MAAA,WAAA,GAAc,cAAgC,aAAe,EAAA;AAAA,EACxE,SAAW,EAAA,KAAA;AAAA,EACX,iBAAA,EAAmB,OAAO,EAAC,CAAA;AAAA,EAC3B,gBAAA,EAAkB,OAAO,EAAC,CAAA;AAAA,EAC1B,gBAAA,EAAkB,OAAO,EAAC,CAAA;AAAA,EAC1B,YAAA,EAAc,OAAO,EAAC,CAAA;AAAA,EACtB,WAAa,EAAA,IAAA;AAAA,EACb,WAAa,EAAA,EAAE,OAAS,EAAA,EAAG,EAAA;AAAA,EAC3B,WAAa,EAAA,KAAA;AAAA,EACb,gBAAgB,MAAM,KAAA,CAAA;AAAA,EACtB,QAAU,EAAA,KAAA;AACZ,CAAC,EAAA;AAEM,SAAS,cAAiB,GAAA;AAC/B,EAAA,OAAO,WAAW,WAAW,CAAA,CAAA;AAC/B;;;;"}