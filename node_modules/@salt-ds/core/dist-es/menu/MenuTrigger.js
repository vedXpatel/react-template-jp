import { jsx, Fragment } from 'react/jsx-runtime';
import { isValidElement, cloneElement } from 'react';
import { mergeProps } from '../utils/mergeProps.js';
import '../utils/useFloatingUI/useFloatingUI.js';
import { useForkRef } from '../utils/useForkRef.js';
import '../utils/useId.js';
import '../salt-provider/SaltProvider.js';
import '../viewport/ViewportProvider.js';
import '../accordion/AccordionGroup.js';
import '../accordion/AccordionPanel.js';
import '../accordion/Accordion.js';
import '../accordion/AccordionHeader.js';
import '../aria-announcer/AriaAnnouncerContext.js';
import '../avatar/Avatar.js';
import '../badge/Badge.js';
import '../banner/Banner.js';
import '../banner/BannerActions.js';
import '../banner/BannerContent.js';
import '../border-item/BorderItem.js';
import '../border-layout/BorderLayout.js';
import '../breakpoints/BreakpointProvider.js';
import '../button/Button.js';
import '../card/Card.js';
import '../checkbox/Checkbox.js';
import '../checkbox/CheckboxGroup.js';
import '@salt-ds/icons';
import '@salt-ds/styles';
import '@salt-ds/window';
import 'clsx';
import '../combo-box/ComboBox.js';
import '../dialog/Dialog.js';
import '../dialog/DialogHeader.js';
import '../dialog/DialogActions.js';
import '../dialog/DialogContent.js';
import '../dialog/DialogContext.js';
import '../dialog/DialogCloseButton.js';
import '../divider/Divider.js';
import '../drawer/Drawer.js';
import '../drawer/DrawerCloseButton.js';
import '../dropdown/Dropdown.js';
import '../file-drop-zone/FileDropZone.js';
import '../file-drop-zone/FileDropZoneIcon.js';
import '../file-drop-zone/FileDropZoneTrigger.js';
import '../flex-item/FlexItem.js';
import '../flex-layout/FlexLayout.js';
import '../flow-layout/FlowLayout.js';
import '../form-field/FormField.js';
import '../form-field-context/FormFieldContext.js';
import '../status-indicator/StatusIndicator.js';
import '../text/Text.js';
import '../text/Code.js';
import '../text/Display.js';
import '../text/Headings.js';
import '../text/Label.js';
import '../text/TextAction.js';
import '../text/TextNotation.js';
import '../grid-item/GridItem.js';
import '../grid-layout/GridLayout.js';
import '../input/Input.js';
import '../interactable-card/InteractableCard.js';
import '../interactable-card/InteractableCardGroup.js';
import '../interactable-card/InteractableCardGroupContext.js';
import '../link/Link.js';
import '../link-card/LinkCard.js';
import '../list-box/ListBox.js';
import '../list-control/ListControlContext.js';
import '@floating-ui/react';
import { useMenuContext } from './MenuContext.js';
import './MenuItem.js';
import './MenuPanel.js';
import { useMenuPanelContext } from './MenuPanelContext.js';
import { MenuTriggerContext } from './MenuTriggerContext.js';
import './MenuGroup.js';
import '../multiline-input/MultilineInput.js';
import '../navigation-item/NavigationItem.js';
import '../option/Option.js';
import '../option/OptionGroup.js';
import '../overlay/OverlayContext.js';
import '../overlay/OverlayPanel.js';
import '../overlay/OverlayPanelCloseButton.js';
import '../overlay/OverlayPanelContent.js';
import '../pagination/Pagination.js';
import '../pagination/Paginator.js';
import '../pagination/CompactInput.js';
import '../pagination/CompactPaginator.js';
import '../pagination/GoToInput.js';
import '../panel/Panel.js';
import '../parent-child-layout/ParentChildLayout.js';
import '../pill/Pill.js';
import '../progress/CircularProgress/CircularProgress.js';
import '../progress/LinearProgress/LinearProgress.js';
import '../radio-button/RadioButton.js';
import '../radio-button/RadioButtonGroup.js';
import '../scrim/Scrim.js';
import '../segmented-button-group/SegmentedButtonGroup.js';
import '../spinner/Spinner.js';
import '../stack-layout/StackLayout.js';
import '../status-adornment/StatusAdornment.js';
import '../toast/Toast.js';
import '../toast/ToastContent.js';
import '../split-layout/SplitLayout.js';
import '../switch/Switch.js';
import '../tag/Tag.js';
import '../toggle-button/ToggleButton.js';
import '../toggle-button-group/ToggleButtonGroup.js';
import '../toggle-button-group/ToggleButtonGroupContext.js';
import '../tooltip/Tooltip.js';
import '../semantic-icon-provider/SemanticIconProvider.js';
import { getRefFromChildren } from '../utils/getRefFromChildren.js';

function MenuTrigger(props) {
  const { children } = props;
  const { getReferenceProps, refs, setFocusInside, focusInside, openState } = useMenuContext();
  const { setFocusInside: setFocusInsideParent } = useMenuPanelContext();
  const handleRef = useForkRef(
    getRefFromChildren(children),
    refs == null ? void 0 : refs.setReference
  );
  if (!children || !isValidElement(children)) {
    return /* @__PURE__ */ jsx(Fragment, {
      children
    });
  }
  return /* @__PURE__ */ jsx(MenuTriggerContext.Provider, {
    value: { triggersSubmenu: true, blurActive: focusInside && openState },
    children: cloneElement(children, {
      ...mergeProps(
        getReferenceProps({
          onFocus() {
            setFocusInsideParent(true);
            setFocusInside(false);
          }
        }),
        children.props
      ),
      ref: handleRef
    })
  });
}

export { MenuTrigger };
//# sourceMappingURL=MenuTrigger.js.map
