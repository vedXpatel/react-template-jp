'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var jsxRuntime = require('react/jsx-runtime');
var styles = require('@salt-ds/styles');
var window = require('@salt-ds/window');
var clsx = require('clsx');
var React = require('react');
var capitalize = require('../utils/capitalize.js');
var makePrefixer = require('../utils/makePrefixer.js');
var useControlled = require('../utils/useControlled.js');
require('../utils/useFloatingUI/useFloatingUI.js');
var useForkRef = require('../utils/useForkRef.js');
require('../utils/useId.js');
require('../salt-provider/SaltProvider.js');
require('../viewport/ViewportProvider.js');
require('../accordion/AccordionGroup.js');
require('../accordion/AccordionPanel.js');
require('../accordion/Accordion.js');
require('../accordion/AccordionHeader.js');
require('../aria-announcer/AriaAnnouncerContext.js');
require('../avatar/Avatar.js');
require('../badge/Badge.js');
require('../banner/Banner.js');
require('../banner/BannerActions.js');
require('../banner/BannerContent.js');
require('../border-item/BorderItem.js');
require('../border-layout/BorderLayout.js');
require('../breakpoints/BreakpointProvider.js');
require('../button/Button.js');
require('../card/Card.js');
require('../checkbox/Checkbox.js');
require('../checkbox/CheckboxGroup.js');
require('@salt-ds/icons');
require('../combo-box/ComboBox.js');
require('../dialog/Dialog.js');
require('../dialog/DialogHeader.js');
require('../dialog/DialogActions.js');
require('../dialog/DialogContent.js');
require('../dialog/DialogContext.js');
require('../dialog/DialogCloseButton.js');
require('../divider/Divider.js');
require('../drawer/Drawer.js');
require('../drawer/DrawerCloseButton.js');
require('../dropdown/Dropdown.js');
require('../file-drop-zone/FileDropZone.js');
require('../file-drop-zone/FileDropZoneIcon.js');
require('../file-drop-zone/FileDropZoneTrigger.js');
require('../flex-item/FlexItem.js');
require('../flex-layout/FlexLayout.js');
require('../flow-layout/FlowLayout.js');
require('../form-field/FormField.js');
require('../form-field-context/FormFieldContext.js');
require('../status-indicator/StatusIndicator.js');
require('../text/Text.js');
require('../text/Code.js');
require('../text/Display.js');
require('../text/Headings.js');
require('../text/Label.js');
require('../text/TextAction.js');
require('../text/TextNotation.js');
require('../grid-item/GridItem.js');
require('../grid-layout/GridLayout.js');
require('../input/Input.js');
require('./InteractableCardGroup.js');
var InteractableCardGroupContext = require('./InteractableCardGroupContext.js');
require('../link/Link.js');
require('../link-card/LinkCard.js');
require('../list-box/ListBox.js');
require('../list-control/ListControlContext.js');
require('@floating-ui/react');
require('../menu/MenuContext.js');
require('../menu/MenuItem.js');
require('../menu/MenuPanel.js');
require('../menu/MenuPanelContext.js');
require('../menu/MenuTriggerContext.js');
require('../menu/MenuGroup.js');
require('../multiline-input/MultilineInput.js');
require('../navigation-item/NavigationItem.js');
require('../option/Option.js');
require('../option/OptionGroup.js');
require('../overlay/OverlayContext.js');
require('../overlay/OverlayPanel.js');
require('../overlay/OverlayPanelCloseButton.js');
require('../overlay/OverlayPanelContent.js');
require('../pagination/Pagination.js');
require('../pagination/Paginator.js');
require('../pagination/CompactInput.js');
require('../pagination/CompactPaginator.js');
require('../pagination/GoToInput.js');
require('../panel/Panel.js');
require('../parent-child-layout/ParentChildLayout.js');
require('../pill/Pill.js');
require('../progress/CircularProgress/CircularProgress.js');
require('../progress/LinearProgress/LinearProgress.js');
require('../radio-button/RadioButton.js');
require('../radio-button/RadioButtonGroup.js');
require('../scrim/Scrim.js');
require('../segmented-button-group/SegmentedButtonGroup.js');
require('../spinner/Spinner.js');
require('../stack-layout/StackLayout.js');
require('../status-adornment/StatusAdornment.js');
require('../toast/Toast.js');
require('../toast/ToastContent.js');
require('../split-layout/SplitLayout.js');
require('../switch/Switch.js');
require('../tag/Tag.js');
require('../toggle-button/ToggleButton.js');
require('../toggle-button-group/ToggleButtonGroup.js');
require('../toggle-button-group/ToggleButtonGroupContext.js');
require('../tooltip/Tooltip.js');
require('../semantic-icon-provider/SemanticIconProvider.js');
var InteractableCard$1 = require('./InteractableCard.css.js');
var useInteractableCard = require('./useInteractableCard.js');

const withBaseName = makePrefixer.makePrefixer("saltInteractableCard");
const InteractableCard = React.forwardRef(function InteractableCard2(props, ref) {
  const {
    accent,
    accentPlacement,
    children,
    className,
    disabled: disabledProp,
    variant = "primary",
    value,
    onBlur,
    onChange,
    onClick,
    onKeyUp,
    onKeyDown,
    ...rest
  } = props;
  const targetWindow = window.useWindow();
  styles.useComponentCssInjection({
    testId: "salt-interactable-card",
    css: InteractableCard$1,
    window: targetWindow
  });
  const interactableCardGroup = InteractableCardGroupContext.useInteractableCardGroup();
  const interactableCardGroupSelected = interactableCardGroup == null ? void 0 : interactableCardGroup.isSelected(value);
  const disabled = (interactableCardGroup == null ? void 0 : interactableCardGroup.disabled) || disabledProp;
  const [selected, setSelected] = useControlled.useControlled({
    controlled: interactableCardGroupSelected,
    default: Boolean(false),
    name: "InteractableCard",
    state: "selected"
  });
  const role = interactableCardGroup ? interactableCardGroup.multiSelect ? "checkbox" : "radio" : "button";
  const isMultiselect = interactableCardGroup == null ? void 0 : interactableCardGroup.multiSelect;
  const isFirstChild = interactableCardGroup == null ? void 0 : interactableCardGroup.isFirstChild(value);
  const ariaChecked = role === "radio" || role === "checkbox" ? selected : void 0;
  const accentValue = accent || accentPlacement;
  const handleClick = (event) => {
    if (interactableCardGroup && !disabled) {
      interactableCardGroup.select(event, value);
      setSelected(!selected);
    }
    onChange == null ? void 0 : onChange(event);
    onClick == null ? void 0 : onClick(event);
  };
  let tabIndex;
  if (interactableCardGroup) {
    if (disabled) {
      tabIndex = -1;
    } else if (isMultiselect) {
      tabIndex = 0;
    } else {
      tabIndex = selected ? 0 : -1;
      if (!interactableCardGroup.value && isFirstChild) {
        tabIndex = 0;
      }
    }
  } else {
    tabIndex = disabled ? -1 : 0;
  }
  const cardRef = React.useRef(null);
  const handleRef = useForkRef.useForkRef(ref, cardRef);
  const { active, cardProps } = useInteractableCard.useInteractableCard({
    disabled,
    onKeyUp,
    onKeyDown,
    onBlur,
    onClick
  });
  return /* @__PURE__ */ jsxRuntime.jsx("div", {
    ...cardProps,
    role,
    "aria-checked": ariaChecked,
    "aria-disabled": disabled,
    "data-value": value,
    className: clsx.clsx(
      withBaseName(),
      withBaseName(variant),
      {
        [withBaseName("accent")]: accentValue,
        [withBaseName(`accent${capitalize.capitalize(accentValue != null ? accentValue : "")}`)]: accentValue,
        [withBaseName("active")]: role === "button" && active,
        [withBaseName("disabled")]: disabled,
        [withBaseName("selected")]: selected
      },
      className
    ),
    ...rest,
    onClick: handleClick,
    ref: handleRef,
    tabIndex,
    children
  });
});

exports.InteractableCard = InteractableCard;
//# sourceMappingURL=InteractableCard.js.map
