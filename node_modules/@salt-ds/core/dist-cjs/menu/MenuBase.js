'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var jsxRuntime = require('react/jsx-runtime');
var react = require('@floating-ui/react');
var React = require('react');
require('clsx');
var useControlled = require('../utils/useControlled.js');
var useFloatingUI = require('../utils/useFloatingUI/useFloatingUI.js');
require('../utils/useId.js');
var useIsomorphicLayoutEffect = require('../utils/useIsomorphicLayoutEffect.js');
require('../salt-provider/SaltProvider.js');
require('../viewport/ViewportProvider.js');
require('../accordion/AccordionGroup.js');
require('../accordion/AccordionPanel.js');
require('../accordion/Accordion.js');
require('../accordion/AccordionHeader.js');
require('../aria-announcer/AriaAnnouncerContext.js');
require('../avatar/Avatar.js');
require('../badge/Badge.js');
require('../banner/Banner.js');
require('../banner/BannerActions.js');
require('../banner/BannerContent.js');
require('../border-item/BorderItem.js');
require('../border-layout/BorderLayout.js');
require('../breakpoints/BreakpointProvider.js');
require('../button/Button.js');
require('../card/Card.js');
require('../checkbox/Checkbox.js');
require('../checkbox/CheckboxGroup.js');
require('@salt-ds/icons');
require('@salt-ds/styles');
require('@salt-ds/window');
require('../combo-box/ComboBox.js');
require('../dialog/Dialog.js');
require('../dialog/DialogHeader.js');
require('../dialog/DialogActions.js');
require('../dialog/DialogContent.js');
require('../dialog/DialogContext.js');
require('../dialog/DialogCloseButton.js');
require('../divider/Divider.js');
require('../drawer/Drawer.js');
require('../drawer/DrawerCloseButton.js');
require('../dropdown/Dropdown.js');
require('../file-drop-zone/FileDropZone.js');
require('../file-drop-zone/FileDropZoneIcon.js');
require('../file-drop-zone/FileDropZoneTrigger.js');
require('../flex-item/FlexItem.js');
require('../flex-layout/FlexLayout.js');
require('../flow-layout/FlowLayout.js');
require('../form-field/FormField.js');
require('../form-field-context/FormFieldContext.js');
require('../status-indicator/StatusIndicator.js');
require('../text/Text.js');
require('../text/Code.js');
require('../text/Display.js');
require('../text/Headings.js');
require('../text/Label.js');
require('../text/TextAction.js');
require('../text/TextNotation.js');
require('../grid-item/GridItem.js');
require('../grid-layout/GridLayout.js');
require('../input/Input.js');
require('../interactable-card/InteractableCard.js');
require('../interactable-card/InteractableCardGroup.js');
require('../interactable-card/InteractableCardGroupContext.js');
require('../link/Link.js');
require('../link-card/LinkCard.js');
require('../list-box/ListBox.js');
require('../list-control/ListControlContext.js');
var MenuContext = require('./MenuContext.js');
require('./MenuItem.js');
require('./MenuPanel.js');
require('./MenuPanelContext.js');
require('./MenuTriggerContext.js');
require('./MenuGroup.js');
require('../multiline-input/MultilineInput.js');
require('../navigation-item/NavigationItem.js');
require('../option/Option.js');
require('../option/OptionGroup.js');
require('../overlay/OverlayContext.js');
require('../overlay/OverlayPanel.js');
require('../overlay/OverlayPanelCloseButton.js');
require('../overlay/OverlayPanelContent.js');
require('../pagination/Pagination.js');
require('../pagination/Paginator.js');
require('../pagination/CompactInput.js');
require('../pagination/CompactPaginator.js');
require('../pagination/GoToInput.js');
require('../panel/Panel.js');
require('../parent-child-layout/ParentChildLayout.js');
require('../pill/Pill.js');
require('../progress/CircularProgress/CircularProgress.js');
require('../progress/LinearProgress/LinearProgress.js');
require('../radio-button/RadioButton.js');
require('../radio-button/RadioButtonGroup.js');
require('../scrim/Scrim.js');
require('../segmented-button-group/SegmentedButtonGroup.js');
require('../spinner/Spinner.js');
require('../stack-layout/StackLayout.js');
require('../status-adornment/StatusAdornment.js');
require('../toast/Toast.js');
require('../toast/ToastContent.js');
require('../split-layout/SplitLayout.js');
require('../switch/Switch.js');
require('../tag/Tag.js');
require('../toggle-button/ToggleButton.js');
require('../toggle-button-group/ToggleButtonGroup.js');
require('../toggle-button-group/ToggleButtonGroupContext.js');
require('../tooltip/Tooltip.js');
require('../semantic-icon-provider/SemanticIconProvider.js');

function MenuBase(props) {
  const {
    children,
    defaultOpen,
    open,
    onOpenChange,
    placement,
    getVirtualElement
  } = props;
  const parentId = react.useFloatingParentNodeId();
  const nodeId = react.useFloatingNodeId();
  const tree = react.useFloatingTree();
  const elementsRef = React.useRef([]);
  const [openState, setOpenState] = useControlled.useControlled({
    controlled: open,
    default: Boolean(defaultOpen),
    name: "ListControl",
    state: "open"
  });
  const setOpen = React.useCallback(
    (newOpen) => {
      setOpenState(newOpen);
      onOpenChange == null ? void 0 : onOpenChange(newOpen);
    },
    [onOpenChange]
  );
  const [activeIndex, setActiveIndex] = React.useState(null);
  const [focusInside, setFocusInside] = React.useState(false);
  const isNested = parentId != null;
  const { x, y, strategy, elements, refs, context } = useFloatingUI.useFloatingUI({
    nodeId,
    open: openState,
    onOpenChange: setOpen,
    strategy: !getVirtualElement ? "absolute" : "fixed",
    placement: placement != null ? placement : isNested || getVirtualElement ? "right-start" : "bottom-start",
    middleware: [
      react.offset(
        isNested ? { crossAxis: -1, mainAxis: 2 } : !getVirtualElement ? 1 : 0
      ),
      react.flip({}),
      react.shift({ limiter: react.limitShift() }),
      react.size({
        apply({ elements: elements2, availableHeight }) {
          Object.assign(elements2.floating.style, {
            maxHeight: `${availableHeight}px`
          });
        }
      })
    ]
  });
  useIsomorphicLayoutEffect.useIsomorphicLayoutEffect(() => {
    if (getVirtualElement) {
      refs.setPositionReference(getVirtualElement());
    }
  }, [getVirtualElement, refs]);
  const { getReferenceProps, getFloatingProps, getItemProps } = react.useInteractions(
    [
      react.useHover(context, {
        enabled: isNested && !focusInside,
        handleClose: react.safePolygon({ blockPointerEvents: true })
      }),
      react.useClick(context, {
        event: "mousedown",
        toggle: !isNested,
        ignoreMouse: isNested
      }),
      react.useRole(context, { role: "menu" }),
      react.useDismiss(context, { bubbles: true }),
      react.useListNavigation(context, {
        listRef: elementsRef,
        activeIndex,
        nested: isNested,
        onNavigate: setActiveIndex
      })
    ]
  );
  const getPanelPosition = () => {
    var _a, _b;
    return {
      top: y != null ? y : 0,
      left: x != null ? x : 0,
      position: strategy,
      width: (_a = elements.floating) == null ? void 0 : _a.offsetWidth,
      height: (_b = elements.floating) == null ? void 0 : _b.offsetHeight
    };
  };
  React.useEffect(() => {
    if (!tree)
      return;
    function handleItemClick() {
      setOpen(false);
    }
    tree.events.on("click", handleItemClick);
    return () => {
      tree.events.off("click", handleItemClick);
    };
  }, [tree, setOpen]);
  return /* @__PURE__ */ jsxRuntime.jsx(react.FloatingNode, {
    id: nodeId,
    children: /* @__PURE__ */ jsxRuntime.jsx(MenuContext.MenuContext.Provider, {
      value: {
        openState,
        getReferenceProps,
        getFloatingProps,
        refs,
        getPanelPosition,
        getItemProps,
        activeIndex,
        context,
        elementsRef,
        focusInside,
        setFocusInside,
        isNested
      },
      children
    })
  });
}

exports.MenuBase = MenuBase;
//# sourceMappingURL=MenuBase.js.map
