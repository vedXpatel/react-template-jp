{"version":3,"file":"MenuPanel.js","sources":["../src/menu/MenuPanel.tsx"],"sourcesContent":["import { FloatingList } from \"@floating-ui/react\";\nimport { clsx } from \"clsx\";\nimport {\n  type ComponentPropsWithoutRef,\n  type ReactNode,\n  forwardRef,\n} from \"react\";\nimport { makePrefixer, useFloatingComponent, useForkRef } from \"../utils\";\nimport { useMenuContext } from \"./MenuContext\";\nimport { MenuPanelBase } from \"./MenuPanelBase\";\nimport { MenuPanelContext } from \"./MenuPanelContext\";\n\nexport interface MenuPanelProps extends ComponentPropsWithoutRef<\"div\"> {\n  /**\n   * The content of the menu panel.\n   */\n  children?: ReactNode;\n}\n\nconst withBaseName = makePrefixer(\"saltMenuPanel\");\n\nexport const MenuPanel = forwardRef<HTMLDivElement, MenuPanelProps>(\n  function MenuPanel(props, ref) {\n    const { children, className, ...rest } = props;\n    const { Component: FloatingComponent } = useFloatingComponent();\n\n    const {\n      getItemProps,\n      openState,\n      getFloatingProps,\n      refs,\n      getPanelPosition,\n      context,\n      elementsRef,\n      activeIndex,\n      setFocusInside,\n      isNested,\n    } = useMenuContext();\n\n    const handleRef = useForkRef<HTMLDivElement>(ref, refs?.setFloating);\n\n    return (\n      <MenuPanelContext.Provider\n        value={{ activeIndex, getItemProps, setFocusInside }}\n      >\n        <FloatingList elementsRef={elementsRef}>\n          <FloatingComponent\n            open={openState}\n            role=\"menu\"\n            {...getFloatingProps()}\n            {...getPanelPosition()}\n            className={clsx(withBaseName(), className)}\n            focusManagerProps={\n              context\n                ? {\n                    context,\n                    initialFocus: isNested ? -1 : 0,\n                    returnFocus: !isNested,\n                    modal: false,\n                  }\n                : undefined\n            }\n            tabIndex={-1}\n            ref={handleRef}\n            {...rest}\n          >\n            <MenuPanelBase>{children}</MenuPanelBase>\n          </FloatingComponent>\n        </FloatingList>\n      </MenuPanelContext.Provider>\n    );\n  },\n);\n"],"names":["makePrefixer","forwardRef","MenuPanel","useFloatingComponent","useMenuContext","useForkRef","jsx","MenuPanelContext","FloatingList","clsx","MenuPanelBase"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmBA,MAAM,YAAA,GAAeA,0BAAa,eAAe,CAAA,CAAA;AAE1C,MAAM,SAAY,GAAAC,gBAAA;AAAA,EACvB,SAASC,UAAU,CAAA,KAAA,EAAO,GAAK,EAAA;AAC7B,IAAA,MAAM,EAAE,QAAA,EAAU,SAAc,EAAA,GAAA,IAAA,EAAS,GAAA,KAAA,CAAA;AACzC,IAAA,MAAM,EAAE,SAAA,EAAW,iBAAkB,EAAA,GAAIC,kCAAqB,EAAA,CAAA;AAE9D,IAAM,MAAA;AAAA,MACJ,YAAA;AAAA,MACA,SAAA;AAAA,MACA,gBAAA;AAAA,MACA,IAAA;AAAA,MACA,gBAAA;AAAA,MACA,OAAA;AAAA,MACA,WAAA;AAAA,MACA,WAAA;AAAA,MACA,cAAA;AAAA,MACA,QAAA;AAAA,QACEC,0BAAe,EAAA,CAAA;AAEnB,IAAA,MAAM,SAAY,GAAAC,qBAAA,CAA2B,GAAK,EAAA,IAAA,IAAA,IAAA,GAAA,KAAA,CAAA,GAAA,IAAA,CAAM,WAAW,CAAA,CAAA;AAEnE,IACE,uBAAAC,cAAA,CAACC,kCAAiB,QAAjB,EAAA;AAAA,MACC,KAAO,EAAA,EAAE,WAAa,EAAA,YAAA,EAAc,cAAe,EAAA;AAAA,MAEnD,QAAC,kBAAAD,cAAA,CAAAE,kBAAA,EAAA;AAAA,QAAa,WAAA;AAAA,QACZ,QAAC,kBAAAF,cAAA,CAAA,iBAAA,EAAA;AAAA,UACC,IAAM,EAAA,SAAA;AAAA,UACN,IAAK,EAAA,MAAA;AAAA,UACJ,GAAG,gBAAiB,EAAA;AAAA,UACpB,GAAG,gBAAiB,EAAA;AAAA,UACrB,SAAW,EAAAG,SAAA,CAAK,YAAa,EAAA,EAAG,SAAS,CAAA;AAAA,UACzC,mBACE,OACI,GAAA;AAAA,YACE,OAAA;AAAA,YACA,YAAA,EAAc,WAAW,CAAK,CAAA,GAAA,CAAA;AAAA,YAC9B,aAAa,CAAC,QAAA;AAAA,YACd,KAAO,EAAA,KAAA;AAAA,WAET,GAAA,KAAA,CAAA;AAAA,UAEN,QAAU,EAAA,CAAA,CAAA;AAAA,UACV,GAAK,EAAA,SAAA;AAAA,UACJ,GAAG,IAAA;AAAA,UAEJ,QAAC,kBAAAH,cAAA,CAAAI,2BAAA,EAAA;AAAA,YAAe,QAAA;AAAA,WAAS,CAAA;AAAA,SAC3B,CAAA;AAAA,OACF,CAAA;AAAA,KACF,CAAA,CAAA;AAAA,GAEJ;AACF;;;;"}