{"version":3,"file":"useComboBox.js","sources":["../src/combo-box/useComboBox.ts"],"sourcesContent":["import type { ComponentPropsWithoutRef, SyntheticEvent } from \"react\";\nimport type { OptionValue } from \"../list-control/ListControlContext\";\nimport {\n  type ListControlProps,\n  useListControl,\n} from \"../list-control/ListControlState\";\nimport { useControlled } from \"../utils\";\n\nexport type UseComboBoxProps<Item> = ListControlProps<Item> &\n  Pick<ComponentPropsWithoutRef<\"input\">, \"value\" | \"defaultValue\">;\n\nexport function useComboBox<Item>(props: UseComboBoxProps<Item>) {\n  const {\n    open,\n    defaultOpen,\n    onOpenChange,\n    multiselect,\n    defaultSelected,\n    selected,\n    onSelectionChange,\n    disabled,\n    readOnly,\n    valueToString,\n    value,\n    defaultValue,\n  } = props;\n\n  const listControl = useListControl<Item>({\n    open,\n    defaultOpen,\n    onOpenChange,\n    multiselect,\n    defaultSelected,\n    selected,\n    onSelectionChange,\n    disabled,\n    readOnly,\n    valueToString,\n  });\n\n  const { selectedState, getOptionsMatching, setSelectedState, setOpen } =\n    listControl;\n\n  const [valueState, setValueState] = useControlled({\n    controlled: value,\n    default:\n      defaultValue ??\n      (selectedState.length === 1 && !multiselect\n        ? listControl.valueToString(selectedState[0])\n        : defaultValue),\n    name: \"ComboBox\",\n    state: \"value\",\n  });\n\n  const select = (event: SyntheticEvent, option: OptionValue<Item>) => {\n    if (option.disabled || disabled || readOnly) {\n      return;\n    }\n\n    let newSelected = [option.value];\n\n    if (multiselect) {\n      if (selectedState.includes(option.value)) {\n        newSelected = selectedState.filter((item) => item !== option.value);\n      } else {\n        newSelected = selectedState.concat([option.value]);\n      }\n    }\n\n    setSelectedState(newSelected);\n    const newValue = getOptionsMatching((option) =>\n      newSelected.includes(option.value),\n    ).map((option) => listControl.valueToString(option.data.value));\n    setValueState(multiselect ? \"\" : newValue[0]);\n    onSelectionChange?.(event, newSelected);\n\n    if (!multiselect) {\n      setOpen(false);\n    }\n  };\n\n  const removePill = (event: SyntheticEvent, itemToRemove: Item) => {\n    if (!multiselect || disabled || readOnly) {\n      return;\n    }\n\n    let newSelected: Item[];\n\n    if (selectedState.includes(itemToRemove)) {\n      newSelected = selectedState.filter((item) => item !== itemToRemove);\n    } else {\n      newSelected = selectedState.concat([itemToRemove]);\n    }\n\n    setSelectedState(newSelected);\n    setValueState(\"\");\n    onSelectionChange?.(event, newSelected);\n  };\n\n  return { ...listControl, select, valueState, setValueState, removePill };\n}\n"],"names":["useListControl","useControlled","option"],"mappings":"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"}