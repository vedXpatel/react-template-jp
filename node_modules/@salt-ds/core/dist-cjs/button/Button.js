'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var jsxRuntime = require('react/jsx-runtime');
var styles = require('@salt-ds/styles');
var window = require('@salt-ds/window');
var clsx = require('clsx');
var React = require('react');
var makePrefixer = require('../utils/makePrefixer.js');
require('../utils/useFloatingUI/useFloatingUI.js');
require('../utils/useId.js');
require('../salt-provider/SaltProvider.js');
require('../viewport/ViewportProvider.js');
require('../accordion/AccordionGroup.js');
require('../accordion/AccordionPanel.js');
require('../accordion/Accordion.js');
require('../accordion/AccordionHeader.js');
require('../aria-announcer/AriaAnnouncerContext.js');
require('../avatar/Avatar.js');
require('../badge/Badge.js');
require('../banner/Banner.js');
require('../banner/BannerActions.js');
require('../banner/BannerContent.js');
require('../border-item/BorderItem.js');
require('../border-layout/BorderLayout.js');
require('../breakpoints/BreakpointProvider.js');
var useButton = require('./useButton.js');
require('../card/Card.js');
require('../checkbox/Checkbox.js');
require('../checkbox/CheckboxGroup.js');
require('@salt-ds/icons');
require('../combo-box/ComboBox.js');
require('../dialog/Dialog.js');
require('../dialog/DialogHeader.js');
require('../dialog/DialogActions.js');
require('../dialog/DialogContent.js');
require('../dialog/DialogContext.js');
require('../dialog/DialogCloseButton.js');
require('../divider/Divider.js');
require('../drawer/Drawer.js');
require('../drawer/DrawerCloseButton.js');
require('../dropdown/Dropdown.js');
require('../file-drop-zone/FileDropZone.js');
require('../file-drop-zone/FileDropZoneIcon.js');
require('../file-drop-zone/FileDropZoneTrigger.js');
require('../flex-item/FlexItem.js');
require('../flex-layout/FlexLayout.js');
require('../flow-layout/FlowLayout.js');
require('../form-field/FormField.js');
require('../form-field-context/FormFieldContext.js');
require('../status-indicator/StatusIndicator.js');
require('../text/Text.js');
require('../text/Code.js');
require('../text/Display.js');
require('../text/Headings.js');
require('../text/Label.js');
require('../text/TextAction.js');
require('../text/TextNotation.js');
require('../grid-item/GridItem.js');
require('../grid-layout/GridLayout.js');
require('../input/Input.js');
require('../interactable-card/InteractableCard.js');
require('../interactable-card/InteractableCardGroup.js');
require('../interactable-card/InteractableCardGroupContext.js');
require('../link/Link.js');
require('../link-card/LinkCard.js');
require('../list-box/ListBox.js');
require('../list-control/ListControlContext.js');
require('@floating-ui/react');
require('../menu/MenuContext.js');
require('../menu/MenuItem.js');
require('../menu/MenuPanel.js');
require('../menu/MenuPanelContext.js');
require('../menu/MenuTriggerContext.js');
require('../menu/MenuGroup.js');
require('../multiline-input/MultilineInput.js');
require('../navigation-item/NavigationItem.js');
require('../option/Option.js');
require('../option/OptionGroup.js');
require('../overlay/OverlayContext.js');
require('../overlay/OverlayPanel.js');
require('../overlay/OverlayPanelCloseButton.js');
require('../overlay/OverlayPanelContent.js');
require('../pagination/Pagination.js');
require('../pagination/Paginator.js');
require('../pagination/CompactInput.js');
require('../pagination/CompactPaginator.js');
require('../pagination/GoToInput.js');
require('../panel/Panel.js');
require('../parent-child-layout/ParentChildLayout.js');
require('../pill/Pill.js');
require('../progress/CircularProgress/CircularProgress.js');
require('../progress/LinearProgress/LinearProgress.js');
require('../radio-button/RadioButton.js');
require('../radio-button/RadioButtonGroup.js');
require('../scrim/Scrim.js');
require('../segmented-button-group/SegmentedButtonGroup.js');
require('../spinner/Spinner.js');
require('../stack-layout/StackLayout.js');
require('../status-adornment/StatusAdornment.js');
require('../toast/Toast.js');
require('../toast/ToastContent.js');
require('../split-layout/SplitLayout.js');
require('../switch/Switch.js');
require('../tag/Tag.js');
require('../toggle-button/ToggleButton.js');
require('../toggle-button-group/ToggleButtonGroup.js');
require('../toggle-button-group/ToggleButtonGroupContext.js');
require('../tooltip/Tooltip.js');
require('../semantic-icon-provider/SemanticIconProvider.js');
var Button$1 = require('./Button.css.js');

const withBaseName = makePrefixer.makePrefixer("saltButton");
const ButtonVariantValues = ["primary", "secondary", "cta"];
const ButtonAppearanceValues = [
  "solid",
  "bordered",
  "transparent"
];
const ButtonSentimentValues = [
  "accented",
  "neutral",
  "positive",
  "negative",
  "caution"
];
function variantToAppearanceAndColor(variant) {
  switch (variant) {
    case "primary":
      return { appearance: "solid", sentiment: "neutral" };
    case "secondary":
      return { appearance: "transparent", sentiment: "neutral" };
    case "cta":
      return { appearance: "solid", sentiment: "accented" };
  }
}
const Button = React.forwardRef(
  function Button2({
    children,
    className,
    disabled,
    focusableWhenDisabled,
    onKeyUp,
    onKeyDown,
    onBlur,
    onClick,
    appearance: appearanceProp,
    sentiment: sentimentProp,
    type = "button",
    variant = "primary",
    ...restProps
  }, ref) {
    var _a, _b;
    const { active, buttonProps } = useButton.useButton({
      disabled,
      focusableWhenDisabled,
      onKeyUp,
      onKeyDown,
      onBlur,
      onClick
    });
    const targetWindow = window.useWindow();
    styles.useComponentCssInjection({
      testId: "salt-button",
      css: Button$1,
      window: targetWindow
    });
    const mapped = variantToAppearanceAndColor(variant);
    const appearance = (_a = appearanceProp != null ? appearanceProp : mapped.appearance) != null ? _a : "solid";
    const sentiment = (_b = sentimentProp != null ? sentimentProp : mapped.sentiment) != null ? _b : "neutral";
    const { tabIndex, ...restButtonProps } = buttonProps;
    return /* @__PURE__ */ jsxRuntime.jsx("button", {
      ...restButtonProps,
      className: clsx.clsx(
        withBaseName(),
        withBaseName(variant),
        {
          [withBaseName("disabled")]: disabled,
          [withBaseName("active")]: active,
          [withBaseName(appearance)]: appearance,
          [withBaseName(sentiment)]: sentiment
        },
        className
      ),
      ...restProps,
      ref,
      type,
      children
    });
  }
);

exports.Button = Button;
exports.ButtonAppearanceValues = ButtonAppearanceValues;
exports.ButtonSentimentValues = ButtonSentimentValues;
exports.ButtonVariantValues = ButtonVariantValues;
//# sourceMappingURL=Button.js.map
