{"version":3,"file":"BreakpointProvider.js","sources":["../src/breakpoints/BreakpointProvider.tsx"],"sourcesContent":["import { type ReactNode, useContext, useState } from \"react\";\nimport { createContext, useIsomorphicLayoutEffect } from \"../utils\";\nimport type { Breakpoints } from \"./Breakpoints\";\n\ntype Breakpoint = keyof Breakpoints;\n\ninterface BreakpointContext {\n  matchedBreakpoints: Breakpoint[];\n}\n\nconst Context = createContext<BreakpointContext>(\"BreakpointContext\", {\n  matchedBreakpoints: [],\n});\n\ninterface BreakpointProviderProps {\n  children?: ReactNode;\n  matchedBreakpoints: Breakpoint[];\n}\n\nexport function BreakpointProvider(props: BreakpointProviderProps) {\n  const { children, matchedBreakpoints } = props;\n\n  return (\n    <Context.Provider value={{ matchedBreakpoints }}>\n      {children}\n    </Context.Provider>\n  );\n}\n\nexport function useMatchedBreakpoints(breakpoints: Breakpoints): Breakpoint[] {\n  const entries = Object.entries(breakpoints).sort(([, a], [, b]) => b - a);\n  const queries = entries.map(([, value]) => `(min-width: ${value}px)`);\n\n  const supportsMatchMedia =\n    typeof window !== \"undefined\" && typeof window.matchMedia === \"function\";\n\n  const [matchedBreakpoints, setMatchedBreakpoints] = useState<\n    Partial<Record<Breakpoint, boolean>>\n  >(Object.fromEntries(entries.map(([bp]) => [bp as Breakpoint, false])));\n\n  useIsomorphicLayoutEffect(() => {\n    if (!supportsMatchMedia) {\n      return;\n    }\n\n    const matchers = queries.map((query, index) => {\n      const mq = window.matchMedia(query);\n      const bp = entries[index][0] as Breakpoint;\n\n      return {\n        mq,\n        handler: () => {\n          setMatchedBreakpoints((prev) => {\n            return {\n              ...prev,\n              [bp]: mq.matches,\n            };\n          });\n        },\n      };\n    });\n\n    matchers.forEach(({ mq, handler }) => {\n      handler();\n      mq.addEventListener(\"change\", handler);\n    });\n\n    return () => {\n      matchers.forEach(({ mq, handler }) => {\n        mq.removeEventListener(\"change\", handler);\n      });\n    };\n  }, [supportsMatchMedia]);\n\n  return Object.keys(matchedBreakpoints).filter(\n    (bp) => matchedBreakpoints[bp as Breakpoint],\n  ) as Breakpoint[];\n}\n\nexport function useBreakpoint(): BreakpointContext & {\n  breakpoint: Breakpoint | null;\n} {\n  const { matchedBreakpoints } = useContext(Context);\n\n  return {\n    matchedBreakpoints,\n    breakpoint: matchedBreakpoints[0] ?? null,\n  };\n}\n"],"names":["createContext","jsx","useState","useIsomorphicLayoutEffect","useContext"],"mappings":"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"}